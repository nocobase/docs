"use strict";(self.webpackChunknocobase_docs=self.webpackChunknocobase_docs||[]).push([[23243],{381356:function(d,s,_){_.r(s);var n=_(572269),u=_(793359),c=_(861788),h=_(719977),m=_(20190),o=_(24268),E=_(496057),v=_(585939),x=_(28484),P=_(635206),M=_(375553),D=_(156266),O=_(572333),I=_(841118),j=_(39297),f=_(868526),C=_(605019),a=_(614651),l=_(280936),i=_(667294),t=_(952596),e=_(785893);function r(){return(0,e.jsx)(a.dY,{children:(0,e.jsx)(i.Suspense,{fallback:(0,e.jsx)(l.Z,{}),children:(0,e.jsx)(e.Fragment,{children:(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[0].value})}),(0,e.jsx)(o.Z,{lang:"typescript",children:t.texts[1].value}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[2].value})}),(0,e.jsxs)("ul",{children:[(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:t.texts[3].value}),t.texts[4].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:t.texts[5].value}),t.texts[6].value,(0,e.jsx)("strong",{children:t.texts[7].value}),t.texts[8].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:t.texts[9].value}),t.texts[10].value,(0,e.jsx)("strong",{children:t.texts[11].value}),t.texts[12].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:t.texts[13].value}),t.texts[14].value]})]})]})})})})}s.default=r},952596:function(d,s,_){_.r(s),_.d(s,{texts:function(){return n}});const n=[{value:"Type",paraId:0},{value:`type WhiteList = string[];
type BlackList = string[];
type AssociationKeysToBeUpdate = string[];

interface CreateOptions extends SequelizeCreateOptions {
  values?: Values;
  whitelist?: WhiteList;
  blacklist?: BlackList;
  updateAssociationValues?: AssociationKeysToBeUpdate;
  context?: any;
}
`,paraId:1},{value:"Details",paraId:2},{value:"values",paraId:3},{value:": The data object of the record to be created.",paraId:3},{value:"whitelist",paraId:3},{value:": Specifies which fields in the data object of the record to be created ",paraId:3},{value:"can be written",paraId:3},{value:". If this parameter is not passed, all fields are allowed to be written by default.",paraId:3},{value:"blacklist",paraId:3},{value:": Specifies which fields in the data object of the record to be created ",paraId:3},{value:"are not allowed to be written",paraId:3},{value:". If this parameter is not passed, all fields are allowed to be written by default.",paraId:3},{value:"transaction",paraId:3},{value:": The transaction object. If no transaction parameter is passed, the method will automatically create an internal transaction.",paraId:3}]}}]);
