"use strict";(self.webpackChunknocobase_docs=self.webpackChunknocobase_docs||[]).push([[5606],{887104:function(a,n,s){s.r(n);var o=s(572269),_=s(793359),c=s(861788),h=s(719977),x=s(20190),m=s(24268),I=s(496057),v=s(585939),p=s(28484),j=s(635206),O=s(375553),E=s(156266),f=s(572333),r=s(841118),g=s(39297),M=s(868526),P=s(605019),d=s(614651),l=s(280936),i=s(667294),t=s(752539),e=s(785893);function u(){return(0,e.jsx)(d.dY,{children:(0,e.jsx)(i.Suspense,{fallback:(0,e.jsx)(l.Z,{}),children:(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("div",{className:"markdown",children:(0,e.jsxs)("h1",{id:"structured-output",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#structured-output",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Structured Output"]})}),(0,e.jsx)(r.Z,{name:"ai-ee",licenseBundled:"true",licensebundled:"true"}),(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsxs)("h2",{id:"introduction",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#introduction",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Introduction"]}),(0,e.jsx)("p",{children:t.texts[0].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/202503041306405.png",alt:""})}),(0,e.jsxs)("h2",{id:"configuration-instructions",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#configuration-instructions",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Configuration Instructions"]}),(0,e.jsxs)("ul",{children:[(0,e.jsxs)("li",{children:[(0,e.jsx)("strong",{children:t.texts[1].value}),t.texts[2].value,(0,e.jsx)("a",{href:"https://json-schema.org/",children:t.texts[3].value}),t.texts[4].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("strong",{children:t.texts[5].value}),t.texts[6].value,(0,e.jsx)("em",{children:t.texts[7].value}),t.texts[8].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("strong",{children:t.texts[9].value}),t.texts[10].value,(0,e.jsx)("em",{children:t.texts[11].value}),t.texts[12].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("strong",{children:t.texts[13].value}),t.texts[14].value]})]}),(0,e.jsxs)("h2",{id:"structured-content-generation-method",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#structured-content-generation-method",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Structured Content Generation Method"]}),(0,e.jsxs)("p",{children:[t.texts[15].value,(0,e.jsx)("strong",{children:t.texts[16].value}),t.texts[17].value,(0,e.jsx)("strong",{children:t.texts[18].value}),t.texts[19].value]}),(0,e.jsxs)("ol",{children:[(0,e.jsxs)("li",{children:[(0,e.jsxs)("p",{children:[t.texts[20].value,(0,e.jsx)("code",{children:t.texts[21].value}),t.texts[22].value]}),(0,e.jsx)("ul",{children:(0,e.jsx)("li",{children:t.texts[23].value})})]}),(0,e.jsxs)("li",{children:[(0,e.jsxs)("p",{children:[t.texts[24].value,(0,e.jsx)("code",{children:t.texts[25].value}),t.texts[26].value]}),(0,e.jsxs)("ul",{children:[(0,e.jsx)("li",{children:t.texts[27].value}),(0,e.jsx)("li",{children:t.texts[28].value})]})]}),(0,e.jsxs)("li",{children:[(0,e.jsxs)("p",{children:[t.texts[29].value,(0,e.jsx)("code",{children:t.texts[30].value}),t.texts[31].value]}),(0,e.jsxs)("ul",{children:[(0,e.jsx)("li",{children:t.texts[32].value}),(0,e.jsxs)("li",{children:[t.texts[33].value,(0,e.jsx)("strong",{children:t.texts[34].value}),t.texts[35].value]})]})]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("p",{children:t.texts[36].value}),(0,e.jsx)("ul",{children:(0,e.jsxs)("li",{children:[t.texts[37].value,(0,e.jsx)("code",{children:t.texts[38].value}),t.texts[39].value]})})]})]}),(0,e.jsxs)("h2",{id:"using-structured-output-results",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#using-structured-output-results",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Using Structured Output Results"]}),(0,e.jsx)("p",{children:t.texts[40].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/202503041330291.png",alt:""})}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/202503041331279.png",alt:""})}),(0,e.jsx)("p",{children:t.texts[41].value}),(0,e.jsxs)("ul",{children:[(0,e.jsx)("li",{children:(0,e.jsx)(d.rU,{to:"/handbook/workflow-json-variable-mapping",children:t.texts[42].value})}),(0,e.jsx)("li",{children:(0,e.jsx)(d.rU,{to:"/handbook/workflow-json-query",children:t.texts[43].value})})]})]})]})})})}n.default=u},752539:function(a,n,s){s.r(n),s.d(n,{texts:function(){return o}});const o=[{value:'In some application scenarios, users may want the LLM model to respond with structured content in JSON format, which can be achieved by configuring "Structured Output".',paraId:0,tocIndex:1},{value:"JSON Schema",paraId:1,tocIndex:2},{value:" - Users can configure ",paraId:1,tocIndex:2},{value:"JSON Schema",paraId:1,tocIndex:2},{value:" to specify the expected structure of the model's response.",paraId:1,tocIndex:2},{value:"Name",paraId:1,tocIndex:2},{value:" - ",paraId:1,tocIndex:2},{value:"Optional",paraId:1,tocIndex:2},{value:", used to help the model better understand the object represented by the JSON Schema.",paraId:1,tocIndex:2},{value:"Description",paraId:1,tocIndex:2},{value:" - ",paraId:1,tocIndex:2},{value:"Optional",paraId:1,tocIndex:2},{value:", used to help the model better understand the purpose of the JSON Schema.",paraId:1,tocIndex:2},{value:"Strict",paraId:1,tocIndex:2},{value:" - Requires the model to generate a response strictly adhering to the JSON Schema structure. Currently, only some newer models from OpenAI support this parameter. Please confirm compatibility with the model before selecting it.",paraId:1,tocIndex:2},{value:"The method of generating structured content depends on the ",paraId:2,tocIndex:3},{value:"model",paraId:2,tocIndex:3},{value:" and its ",paraId:2,tocIndex:3},{value:"Response format",paraId:2,tocIndex:3},{value:" configuration:",paraId:2,tocIndex:3},{value:"Models that only support ",paraId:3,tocIndex:3},{value:"text",paraId:3,tocIndex:3},{value:" in Response format",paraId:3,tocIndex:3},{value:"When calling, the node will bind a Tool that generates JSON content based on the JSON Schema, guiding the model to generate a structured response by calling this Tool.",paraId:4,tocIndex:3},{value:"Models that support JSON mode (",paraId:5,tocIndex:3},{value:"json_object",paraId:5,tocIndex:3},{value:") in Response format",paraId:5,tocIndex:3},{value:"When calling, select JSON mode, and users need to explicitly indicate in the Prompt that the model should return in JSON format, and provide a response field description.",paraId:6,tocIndex:3},{value:"In this mode, the JSON Schema is only used to parse the JSON string returned by the model into a target JSON object.",paraId:6,tocIndex:3},{value:"Models that support JSON Schema (",paraId:7,tocIndex:3},{value:"json_schema",paraId:7,tocIndex:3},{value:") in Response format",paraId:7,tocIndex:3},{value:"JSON Schema is directly used to specify the target response structure of the model.",paraId:8,tocIndex:3},{value:"Optional ",paraId:8,tocIndex:3},{value:"Strict",paraId:8,tocIndex:3},{value:" parameter, requiring the model to generate a response strictly adhering to the JSON Schema.",paraId:8,tocIndex:3},{value:"Ollama local models",paraId:9,tocIndex:3},{value:"If JSON Schema is configured, when calling, the node will pass it as the ",paraId:10,tocIndex:3},{value:"format",paraId:10,tocIndex:3},{value:" parameter to the model.",paraId:10,tocIndex:3},{value:"The structured content of the model's response is saved in the Structured content field of the node, which can be used by subsequent nodes.",paraId:11,tocIndex:4},{value:"If you need to use the content of the fields in the JSON object, you can refer to:",paraId:12,tocIndex:4},{value:"JSON Variable Mapping",paraId:13,tocIndex:4},{value:"JSON Query",paraId:14,tocIndex:4}]}}]);
