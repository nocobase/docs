"use strict";(self.webpackChunknocobase_docs=self.webpackChunknocobase_docs||[]).push([[88315],{88315:function(I,a,e){e.r(a),e.d(a,{texts:function(){return d}});const d=[{value:"Helper that renders the block if ",paraId:0,tocIndex:1},{value:"both",paraId:0,tocIndex:1},{value:" of the given values are truthy. If an inverse block is specified it will be rendered when falsy. Works as a block helper, inline helper or subexpression.",paraId:0,tocIndex:1},{value:"Params",paraId:1,tocIndex:1},{value:"a",paraId:2,tocIndex:1},{value:" ",paraId:2,tocIndex:1},{value:"{any}",paraId:2,tocIndex:1},{value:"b",paraId:2,tocIndex:1},{value:" ",paraId:2,tocIndex:1},{value:"{any}",paraId:2,tocIndex:1},{value:"options",paraId:2,tocIndex:1},{value:" ",paraId:2,tocIndex:1},{value:"{Object}",paraId:2,tocIndex:1},{value:": Handlebars provided options object",paraId:2,tocIndex:1},{value:"returns",paraId:2,tocIndex:1},{value:" ",paraId:2,tocIndex:1},{value:"{String}",paraId:2,tocIndex:1},{value:"Example",paraId:3,tocIndex:1},{value:`<!-- {great: true, magnificent: true} -->
{{#and great magnificent}}A{{else}}B{{/and}}
<!-- results in: 'A' -->
`,paraId:4,tocIndex:1},{value:`Render a block when a comparison of the first and third
arguments returns true. The second argument is
the `,paraId:5,tocIndex:2},{value:"arithemetic operator",paraId:5,tocIndex:2},{value:` to use. You may also
optionally specify an inverse block to render when falsy.`,paraId:5,tocIndex:2},{value:"Params",paraId:6,tocIndex:2},{value:"a",paraId:7,tocIndex:2},{value:" ",paraId:7,tocIndex:2},{value:"{}",paraId:7,tocIndex:2},{value:"operator",paraId:7,tocIndex:2},{value:" ",paraId:7,tocIndex:2},{value:"{}",paraId:7,tocIndex:2},{value:": The operator to use. Operators must be enclosed in quotes: ",paraId:7,tocIndex:2},{value:'">"',paraId:7,tocIndex:2},{value:", ",paraId:7,tocIndex:2},{value:'"="',paraId:7,tocIndex:2},{value:", ",paraId:7,tocIndex:2},{value:'"<="',paraId:7,tocIndex:2},{value:", and so on.",paraId:7,tocIndex:2},{value:"b",paraId:7,tocIndex:2},{value:" ",paraId:7,tocIndex:2},{value:"{}",paraId:7,tocIndex:2},{value:"options",paraId:7,tocIndex:2},{value:" ",paraId:7,tocIndex:2},{value:"{Object}",paraId:7,tocIndex:2},{value:": Handlebars provided options object",paraId:7,tocIndex:2},{value:"returns",paraId:7,tocIndex:2},{value:" ",paraId:7,tocIndex:2},{value:"{String}",paraId:7,tocIndex:2},{value:": Block, or if specified the inverse block is rendered if falsey.",paraId:7,tocIndex:2},{value:"Block helper that renders the block if ",paraId:8,tocIndex:3},{value:"collection",paraId:8,tocIndex:3},{value:" has the given ",paraId:8,tocIndex:3},{value:"value",paraId:8,tocIndex:3},{value:", using strict equality (",paraId:8,tocIndex:3},{value:"===",paraId:8,tocIndex:3},{value:") for comparison, otherwise the inverse block is rendered (if specified). If a ",paraId:8,tocIndex:3},{value:"startIndex",paraId:8,tocIndex:3},{value:" is specified and is negative, it is used as the offset from the end of the collection.",paraId:8,tocIndex:3},{value:"Params",paraId:9,tocIndex:3},{value:"collection",paraId:10,tocIndex:3},{value:" ",paraId:10,tocIndex:3},{value:"{Array|Object|String}",paraId:10,tocIndex:3},{value:": The collection to iterate over.",paraId:10,tocIndex:3},{value:"value",paraId:10,tocIndex:3},{value:" ",paraId:10,tocIndex:3},{value:"{any}",paraId:10,tocIndex:3},{value:": The value to check for.",paraId:10,tocIndex:3},{value:"[startIndex=0]",paraId:10,tocIndex:3},{value:" ",paraId:10,tocIndex:3},{value:"{Number}",paraId:10,tocIndex:3},{value:": Optionally define the starting index.",paraId:10,tocIndex:3},{value:"options",paraId:10,tocIndex:3},{value:" ",paraId:10,tocIndex:3},{value:"{Object}",paraId:10,tocIndex:3},{value:": Handlebars provided options object.",paraId:10,tocIndex:3},{value:"Example",paraId:11,tocIndex:3},{value:`<!-- array = ['a', 'b', 'c'] -->
{{#contains array "d"}}
  This will not be rendered.
{{else}}
  This will be rendered.
{{/contains}}
`,paraId:12,tocIndex:3},{value:'Returns the first value that is not undefined, otherwise the "default" value is returned.',paraId:13,tocIndex:4},{value:"Params",paraId:14,tocIndex:4},{value:"value",paraId:15,tocIndex:4},{value:" ",paraId:15,tocIndex:4},{value:"{any}",paraId:15,tocIndex:4},{value:"defaultValue",paraId:15,tocIndex:4},{value:" ",paraId:15,tocIndex:4},{value:"{any}",paraId:15,tocIndex:4},{value:"returns",paraId:15,tocIndex:4},{value:" ",paraId:15,tocIndex:4},{value:"{String}",paraId:15,tocIndex:4},{value:"Block helper that renders a block if ",paraId:16,tocIndex:5},{value:"a",paraId:16,tocIndex:5},{value:" is ",paraId:16,tocIndex:5},{value:"equal to",paraId:16,tocIndex:5},{value:" ",paraId:16,tocIndex:5},{value:"b",paraId:16,tocIndex:5},{value:`.
If an inverse block is specified it will be rendered when falsy.
You may optionally use the `,paraId:16,tocIndex:5},{value:'compare=""',paraId:16,tocIndex:5},{value:` hash argument for the
second value.`,paraId:16,tocIndex:5},{value:"Params",paraId:17,tocIndex:5},{value:"a",paraId:18,tocIndex:5},{value:" ",paraId:18,tocIndex:5},{value:"{String}",paraId:18,tocIndex:5},{value:"b",paraId:18,tocIndex:5},{value:" ",paraId:18,tocIndex:5},{value:"{String}",paraId:18,tocIndex:5},{value:"options",paraId:18,tocIndex:5},{value:" ",paraId:18,tocIndex:5},{value:"{Object}",paraId:18,tocIndex:5},{value:": Handlebars provided options object",paraId:18,tocIndex:5},{value:"returns",paraId:18,tocIndex:5},{value:" ",paraId:18,tocIndex:5},{value:"{String}",paraId:18,tocIndex:5},{value:": Block, or inverse block if specified and falsey.",paraId:18,tocIndex:5},{value:"Block helper that renders a block if ",paraId:19,tocIndex:6},{value:"a",paraId:19,tocIndex:6},{value:" is ",paraId:19,tocIndex:6},{value:"greater than",paraId:19,tocIndex:6},{value:" ",paraId:19,tocIndex:6},{value:"b",paraId:19,tocIndex:6},{value:".",paraId:19,tocIndex:6},{value:`If an inverse block is specified it will be rendered when falsy.
You may optionally use the `,paraId:20,tocIndex:6},{value:'compare=""',paraId:20,tocIndex:6},{value:` hash argument for the
second value.`,paraId:20,tocIndex:6},{value:"Params",paraId:21,tocIndex:6},{value:"a",paraId:22,tocIndex:6},{value:" ",paraId:22,tocIndex:6},{value:"{String}",paraId:22,tocIndex:6},{value:"b",paraId:22,tocIndex:6},{value:" ",paraId:22,tocIndex:6},{value:"{String}",paraId:22,tocIndex:6},{value:"options",paraId:22,tocIndex:6},{value:" ",paraId:22,tocIndex:6},{value:"{Object}",paraId:22,tocIndex:6},{value:": Handlebars provided options object",paraId:22,tocIndex:6},{value:"returns",paraId:22,tocIndex:6},{value:" ",paraId:22,tocIndex:6},{value:"{String}",paraId:22,tocIndex:6},{value:": Block, or inverse block if specified and falsey.",paraId:22,tocIndex:6},{value:"Block helper that renders a block if ",paraId:23,tocIndex:7},{value:"a",paraId:23,tocIndex:7},{value:" is ",paraId:23,tocIndex:7},{value:"greater than or equal to",paraId:23,tocIndex:7},{value:" ",paraId:23,tocIndex:7},{value:"b",paraId:23,tocIndex:7},{value:".",paraId:23,tocIndex:7},{value:`If an inverse block is specified it will be rendered when falsy.
You may optionally use the `,paraId:24,tocIndex:7},{value:'compare=""',paraId:24,tocIndex:7},{value:` hash argument for the
second value.`,paraId:24,tocIndex:7},{value:"Params",paraId:25,tocIndex:7},{value:"a",paraId:26,tocIndex:7},{value:" ",paraId:26,tocIndex:7},{value:"{String}",paraId:26,tocIndex:7},{value:"b",paraId:26,tocIndex:7},{value:" ",paraId:26,tocIndex:7},{value:"{String}",paraId:26,tocIndex:7},{value:"options",paraId:26,tocIndex:7},{value:" ",paraId:26,tocIndex:7},{value:"{Object}",paraId:26,tocIndex:7},{value:": Handlebars provided options object",paraId:26,tocIndex:7},{value:"returns",paraId:26,tocIndex:7},{value:" ",paraId:26,tocIndex:7},{value:"{String}",paraId:26,tocIndex:7},{value:": Block, or inverse block if specified and falsey.",paraId:26,tocIndex:7},{value:"Block helper that renders a block if ",paraId:27,tocIndex:8},{value:"value",paraId:27,tocIndex:8},{value:" has ",paraId:27,tocIndex:8},{value:"pattern",paraId:27,tocIndex:8},{value:`.
If an inverse block is specified it will be rendered when falsy.`,paraId:27,tocIndex:8},{value:"Params",paraId:28,tocIndex:8},{value:"val",paraId:29,tocIndex:8},{value:" ",paraId:29,tocIndex:8},{value:"{any}",paraId:29,tocIndex:8},{value:": The value to check.",paraId:29,tocIndex:8},{value:"pattern",paraId:29,tocIndex:8},{value:" ",paraId:29,tocIndex:8},{value:"{any}",paraId:29,tocIndex:8},{value:": The pattern to check for.",paraId:29,tocIndex:8},{value:"options",paraId:29,tocIndex:8},{value:" ",paraId:29,tocIndex:8},{value:"{Object}",paraId:29,tocIndex:8},{value:": Handlebars provided options object",paraId:29,tocIndex:8},{value:"returns",paraId:29,tocIndex:8},{value:" ",paraId:29,tocIndex:8},{value:"{String}",paraId:29,tocIndex:8},{value:"Inline, subexpression, or block helper that returns true (or the block) if the given collection is empty, or false (or the inverse block, if supplied) if the colleciton is not empty.",paraId:30,tocIndex:9},{value:"Params",paraId:31,tocIndex:9},{value:"collection",paraId:32,tocIndex:9},{value:" ",paraId:32,tocIndex:9},{value:"{Object}",paraId:32,tocIndex:9},{value:"options",paraId:32,tocIndex:9},{value:" ",paraId:32,tocIndex:9},{value:"{Object}",paraId:32,tocIndex:9},{value:"returns",paraId:32,tocIndex:9},{value:" ",paraId:32,tocIndex:9},{value:"{String}",paraId:32,tocIndex:9},{value:"Example",paraId:33,tocIndex:9},{value:`<!-- array: [] -->
{{#isEmpty array}}AAA{{else}}BBB{{/isEmpty}}
<!-- results in: 'AAA' -->

<!-- array: [] -->
{{isEmpty array}}
<!-- results in: true -->
`,paraId:34,tocIndex:9},{value:"Returns true if the given ",paraId:35,tocIndex:10},{value:"value",paraId:35,tocIndex:10},{value:" is falsey. Uses the ",paraId:35,tocIndex:10},{value:"falsey",paraId:35,tocIndex:10},{value:`
library for comparisons. Please see that library for more information
or to report bugs with this helper.`,paraId:35,tocIndex:10},{value:"Params",paraId:36,tocIndex:10},{value:"val",paraId:37,tocIndex:10},{value:" ",paraId:37,tocIndex:10},{value:"{any}",paraId:37,tocIndex:10},{value:"options",paraId:37,tocIndex:10},{value:" ",paraId:37,tocIndex:10},{value:"{Options}",paraId:37,tocIndex:10},{value:"returns",paraId:37,tocIndex:10},{value:" ",paraId:37,tocIndex:10},{value:"{Boolean}",paraId:37,tocIndex:10},{value:"Returns true if the given ",paraId:38,tocIndex:11},{value:"value",paraId:38,tocIndex:11},{value:" is truthy. Uses the ",paraId:38,tocIndex:11},{value:"falsey",paraId:38,tocIndex:11},{value:`
library for comparisons. Please see that library for more information
or to report bugs with this helper.`,paraId:38,tocIndex:11},{value:"Params",paraId:39,tocIndex:11},{value:"val",paraId:40,tocIndex:11},{value:" ",paraId:40,tocIndex:11},{value:"{any}",paraId:40,tocIndex:11},{value:"options",paraId:40,tocIndex:11},{value:" ",paraId:40,tocIndex:11},{value:"{Options}",paraId:40,tocIndex:11},{value:"returns",paraId:40,tocIndex:11},{value:" ",paraId:40,tocIndex:11},{value:"{Boolean}",paraId:40,tocIndex:11},{value:"Return true if the given value is an even number.",paraId:41,tocIndex:12},{value:"Params",paraId:42,tocIndex:12},{value:"number",paraId:43,tocIndex:12},{value:" ",paraId:43,tocIndex:12},{value:"{Number}",paraId:43,tocIndex:12},{value:"options",paraId:43,tocIndex:12},{value:" ",paraId:43,tocIndex:12},{value:"{Object}",paraId:43,tocIndex:12},{value:": Handlebars provided options object",paraId:43,tocIndex:12},{value:"returns",paraId:43,tocIndex:12},{value:" ",paraId:43,tocIndex:12},{value:"{String}",paraId:43,tocIndex:12},{value:": Block, or inverse block if specified and falsey.",paraId:43,tocIndex:12},{value:"Example",paraId:44,tocIndex:12},{value:`{{#ifEven value}}
  render A
{{else}}
  render B
{{/ifEven}}
`,paraId:45,tocIndex:12},{value:`Conditionally renders a block if the remainder is zero when
`,paraId:46,tocIndex:13},{value:"a",paraId:46,tocIndex:13},{value:" operand is divided by ",paraId:46,tocIndex:13},{value:"b",paraId:46,tocIndex:13},{value:`. If an inverse block is specified
it will be rendered when the remainder is `,paraId:46,tocIndex:13},{value:"not zero",paraId:46,tocIndex:13},{value:".",paraId:46,tocIndex:13},{value:"Params",paraId:47,tocIndex:13},{value:"{}",paraId:48,tocIndex:13},{value:": {Number}",paraId:48,tocIndex:13},{value:"{}",paraId:48,tocIndex:13},{value:": {Number}",paraId:48,tocIndex:13},{value:"options",paraId:48,tocIndex:13},{value:" ",paraId:48,tocIndex:13},{value:"{Object}",paraId:48,tocIndex:13},{value:": Handlebars provided options object",paraId:48,tocIndex:13},{value:"returns",paraId:48,tocIndex:13},{value:" ",paraId:48,tocIndex:13},{value:"{String}",paraId:48,tocIndex:13},{value:": Block, or inverse block if specified and falsey.",paraId:48,tocIndex:13},{value:"Block helper that renders a block if ",paraId:49,tocIndex:14},{value:"value",paraId:49,tocIndex:14},{value:" is ",paraId:49,tocIndex:14},{value:"an odd number",paraId:49,tocIndex:14},{value:". If an inverse block is specified it will be rendered when falsy.",paraId:49,tocIndex:14},{value:"Params",paraId:50,tocIndex:14},{value:"value",paraId:51,tocIndex:14},{value:" ",paraId:51,tocIndex:14},{value:"{Object}",paraId:51,tocIndex:14},{value:"options",paraId:51,tocIndex:14},{value:" ",paraId:51,tocIndex:14},{value:"{Object}",paraId:51,tocIndex:14},{value:": Handlebars provided options object",paraId:51,tocIndex:14},{value:"returns",paraId:51,tocIndex:14},{value:" ",paraId:51,tocIndex:14},{value:"{String}",paraId:51,tocIndex:14},{value:": Block, or inverse block if specified and falsey.",paraId:51,tocIndex:14},{value:"Example",paraId:52,tocIndex:14},{value:`{{#ifOdd value}}
  render A
{{else}}
  render B
{{/ifOdd}}
`,paraId:53,tocIndex:14},{value:"Block helper that renders a block if ",paraId:54,tocIndex:15},{value:"a",paraId:54,tocIndex:15},{value:" is ",paraId:54,tocIndex:15},{value:"equal to",paraId:54,tocIndex:15},{value:" ",paraId:54,tocIndex:15},{value:"b",paraId:54,tocIndex:15},{value:`.
If an inverse block is specified it will be rendered when falsy.
Similar to `,paraId:54,tocIndex:15},{value:"eq",paraId:55,tocIndex:15},{value:" but does not do strict equality.",paraId:54,tocIndex:15},{value:"Params",paraId:56,tocIndex:15},{value:"a",paraId:57,tocIndex:15},{value:" ",paraId:57,tocIndex:15},{value:"{any}",paraId:57,tocIndex:15},{value:"b",paraId:57,tocIndex:15},{value:" ",paraId:57,tocIndex:15},{value:"{any}",paraId:57,tocIndex:15},{value:"options",paraId:57,tocIndex:15},{value:" ",paraId:57,tocIndex:15},{value:"{Object}",paraId:57,tocIndex:15},{value:": Handlebars provided options object",paraId:57,tocIndex:15},{value:"returns",paraId:57,tocIndex:15},{value:" ",paraId:57,tocIndex:15},{value:"{String}",paraId:57,tocIndex:15},{value:"Block helper that renders a block if ",paraId:58,tocIndex:16},{value:"a",paraId:58,tocIndex:16},{value:" is ",paraId:58,tocIndex:16},{value:"not equal to",paraId:58,tocIndex:16},{value:" ",paraId:58,tocIndex:16},{value:"b",paraId:58,tocIndex:16},{value:`.
If an inverse block is specified it will be rendered when falsy.
Similar to `,paraId:58,tocIndex:16},{value:"unlessEq",paraId:59,tocIndex:16},{value:` but does not use strict equality for
comparisons.`,paraId:58,tocIndex:16},{value:"Params",paraId:60,tocIndex:16},{value:"a",paraId:61,tocIndex:16},{value:" ",paraId:61,tocIndex:16},{value:"{String}",paraId:61,tocIndex:16},{value:"b",paraId:61,tocIndex:16},{value:" ",paraId:61,tocIndex:16},{value:"{String}",paraId:61,tocIndex:16},{value:"options",paraId:61,tocIndex:16},{value:" ",paraId:61,tocIndex:16},{value:"{Object}",paraId:61,tocIndex:16},{value:": Handlebars provided options object",paraId:61,tocIndex:16},{value:"returns",paraId:61,tocIndex:16},{value:" ",paraId:61,tocIndex:16},{value:"{String}",paraId:61,tocIndex:16},{value:"Block helper that renders a block if ",paraId:62,tocIndex:17},{value:"a",paraId:62,tocIndex:17},{value:" is ",paraId:62,tocIndex:17},{value:"less than",paraId:62,tocIndex:17},{value:" ",paraId:62,tocIndex:17},{value:"b",paraId:62,tocIndex:17},{value:".",paraId:62,tocIndex:17},{value:`If an inverse block is specified it will be rendered when falsy.
You may optionally use the `,paraId:63,tocIndex:17},{value:'compare=""',paraId:63,tocIndex:17},{value:` hash argument for the
second value.`,paraId:63,tocIndex:17},{value:"Params",paraId:64,tocIndex:17},{value:"context",paraId:65,tocIndex:17},{value:" ",paraId:65,tocIndex:17},{value:"{Object}",paraId:65,tocIndex:17},{value:"options",paraId:65,tocIndex:17},{value:" ",paraId:65,tocIndex:17},{value:"{Object}",paraId:65,tocIndex:17},{value:": Handlebars provided options object",paraId:65,tocIndex:17},{value:"returns",paraId:65,tocIndex:17},{value:" ",paraId:65,tocIndex:17},{value:"{String}",paraId:65,tocIndex:17},{value:": Block, or inverse block if specified and falsey.",paraId:65,tocIndex:17},{value:"Block helper that renders a block if ",paraId:66,tocIndex:18},{value:"a",paraId:66,tocIndex:18},{value:" is ",paraId:66,tocIndex:18},{value:"less than or equal to",paraId:66,tocIndex:18},{value:" ",paraId:66,tocIndex:18},{value:"b",paraId:66,tocIndex:18},{value:".",paraId:66,tocIndex:18},{value:`If an inverse block is specified it will be rendered when falsy.
You may optionally use the `,paraId:67,tocIndex:18},{value:'compare=""',paraId:67,tocIndex:18},{value:` hash argument for the
second value.`,paraId:67,tocIndex:18},{value:"Params",paraId:68,tocIndex:18},{value:"a",paraId:69,tocIndex:18},{value:" ",paraId:69,tocIndex:18},{value:"{Sring}",paraId:69,tocIndex:18},{value:"b",paraId:69,tocIndex:18},{value:" ",paraId:69,tocIndex:18},{value:"{Sring}",paraId:69,tocIndex:18},{value:"options",paraId:69,tocIndex:18},{value:" ",paraId:69,tocIndex:18},{value:"{Object}",paraId:69,tocIndex:18},{value:": Handlebars provided options object",paraId:69,tocIndex:18},{value:"returns",paraId:69,tocIndex:18},{value:" ",paraId:69,tocIndex:18},{value:"{String}",paraId:69,tocIndex:18},{value:": Block, or inverse block if specified and falsey.",paraId:69,tocIndex:18},{value:"Block helper that renders a block if ",paraId:70,tocIndex:19},{value:"neither of",paraId:70,tocIndex:19},{value:` the given values
are truthy. If an inverse block is specified it will be rendered
when falsy.`,paraId:70,tocIndex:19},{value:"Params",paraId:71,tocIndex:19},{value:"a",paraId:72,tocIndex:19},{value:" ",paraId:72,tocIndex:19},{value:"{any}",paraId:72,tocIndex:19},{value:"b",paraId:72,tocIndex:19},{value:" ",paraId:72,tocIndex:19},{value:"{any}",paraId:72,tocIndex:19},{value:"options",paraId:72,tocIndex:19},{value:" ",paraId:72,tocIndex:19},{value:"{}",paraId:72,tocIndex:19},{value:": Handlebars options object",paraId:72,tocIndex:19},{value:"returns",paraId:72,tocIndex:19},{value:" ",paraId:72,tocIndex:19},{value:"{String}",paraId:72,tocIndex:19},{value:": Block, or inverse block if specified and falsey.",paraId:72,tocIndex:19},{value:"Returns true if ",paraId:73,tocIndex:20},{value:"val",paraId:73,tocIndex:20},{value:" is falsey. Works as a block or inline helper.",paraId:73,tocIndex:20},{value:"Params",paraId:74,tocIndex:20},{value:"val",paraId:75,tocIndex:20},{value:" ",paraId:75,tocIndex:20},{value:"{String}",paraId:75,tocIndex:20},{value:"options",paraId:75,tocIndex:20},{value:" ",paraId:75,tocIndex:20},{value:"{Object}",paraId:75,tocIndex:20},{value:": Handlebars provided options object",paraId:75,tocIndex:20},{value:"returns",paraId:75,tocIndex:20},{value:" ",paraId:75,tocIndex:20},{value:"{String}",paraId:75,tocIndex:20},{value:"Block helper that renders a block if ",paraId:76,tocIndex:21},{value:"any of",paraId:76,tocIndex:21},{value:" the given values is truthy. If an inverse block is specified it will be rendered when falsy.",paraId:76,tocIndex:21},{value:"Params",paraId:77,tocIndex:21},{value:"arguments",paraId:78,tocIndex:21},{value:" ",paraId:78,tocIndex:21},{value:"{...any}",paraId:78,tocIndex:21},{value:": Variable number of arguments",paraId:78,tocIndex:21},{value:"options",paraId:78,tocIndex:21},{value:" ",paraId:78,tocIndex:21},{value:"{Object}",paraId:78,tocIndex:21},{value:": Handlebars options object",paraId:78,tocIndex:21},{value:"returns",paraId:78,tocIndex:21},{value:" ",paraId:78,tocIndex:21},{value:"{String}",paraId:78,tocIndex:21},{value:": Block, or inverse block if specified and falsey.",paraId:78,tocIndex:21},{value:"Example",paraId:79,tocIndex:21},{value:`{{#or a b c}}
  If any value is true this will be rendered.
{{/or}}
`,paraId:80,tocIndex:21},{value:"Block helper that always renders the inverse block ",paraId:81,tocIndex:22},{value:"unless ",paraId:81,tocIndex:22},{value:"a",paraId:81,tocIndex:22},{value:` is
is equal to `,paraId:81,tocIndex:22},{value:"b",paraId:81,tocIndex:22},{value:".",paraId:81,tocIndex:22},{value:"Params",paraId:82,tocIndex:22},{value:"a",paraId:83,tocIndex:22},{value:" ",paraId:83,tocIndex:22},{value:"{String}",paraId:83,tocIndex:22},{value:"b",paraId:83,tocIndex:22},{value:" ",paraId:83,tocIndex:22},{value:"{String}",paraId:83,tocIndex:22},{value:"options",paraId:83,tocIndex:22},{value:" ",paraId:83,tocIndex:22},{value:"{Object}",paraId:83,tocIndex:22},{value:": Handlebars provided options object",paraId:83,tocIndex:22},{value:"returns",paraId:83,tocIndex:22},{value:" ",paraId:83,tocIndex:22},{value:"{String}",paraId:83,tocIndex:22},{value:": Inverse block by default, or block if falsey.",paraId:83,tocIndex:22},{value:"Block helper that always renders the inverse block ",paraId:84,tocIndex:23},{value:"unless ",paraId:84,tocIndex:23},{value:"a",paraId:84,tocIndex:23},{value:` is
is greater than `,paraId:84,tocIndex:23},{value:"b",paraId:84,tocIndex:23},{value:".",paraId:84,tocIndex:23},{value:"Params",paraId:85,tocIndex:23},{value:"a",paraId:86,tocIndex:23},{value:" ",paraId:86,tocIndex:23},{value:"{Object}",paraId:86,tocIndex:23},{value:": The default value",paraId:86,tocIndex:23},{value:"b",paraId:86,tocIndex:23},{value:" ",paraId:86,tocIndex:23},{value:"{Object}",paraId:86,tocIndex:23},{value:": The value to compare",paraId:86,tocIndex:23},{value:"options",paraId:86,tocIndex:23},{value:" ",paraId:86,tocIndex:23},{value:"{Object}",paraId:86,tocIndex:23},{value:": Handlebars provided options object",paraId:86,tocIndex:23},{value:"returns",paraId:86,tocIndex:23},{value:" ",paraId:86,tocIndex:23},{value:"{String}",paraId:86,tocIndex:23},{value:": Inverse block by default, or block if falsey.",paraId:86,tocIndex:23},{value:"Block helper that always renders the inverse block ",paraId:87,tocIndex:24},{value:"unless ",paraId:87,tocIndex:24},{value:"a",paraId:87,tocIndex:24},{value:` is
is less than `,paraId:87,tocIndex:24},{value:"b",paraId:87,tocIndex:24},{value:".",paraId:87,tocIndex:24},{value:"Params",paraId:88,tocIndex:24},{value:"a",paraId:89,tocIndex:24},{value:" ",paraId:89,tocIndex:24},{value:"{Object}",paraId:89,tocIndex:24},{value:": The default value",paraId:89,tocIndex:24},{value:"b",paraId:89,tocIndex:24},{value:" ",paraId:89,tocIndex:24},{value:"{Object}",paraId:89,tocIndex:24},{value:": The value to compare",paraId:89,tocIndex:24},{value:"options",paraId:89,tocIndex:24},{value:" ",paraId:89,tocIndex:24},{value:"{Object}",paraId:89,tocIndex:24},{value:": Handlebars provided options object",paraId:89,tocIndex:24},{value:"returns",paraId:89,tocIndex:24},{value:" ",paraId:89,tocIndex:24},{value:"{String}",paraId:89,tocIndex:24},{value:": Block, or inverse block if specified and falsey.",paraId:89,tocIndex:24},{value:"Block helper that always renders the inverse block ",paraId:90,tocIndex:25},{value:"unless ",paraId:90,tocIndex:25},{value:"a",paraId:90,tocIndex:25},{value:` is
is greater than or equal to `,paraId:90,tocIndex:25},{value:"b",paraId:90,tocIndex:25},{value:".",paraId:90,tocIndex:25},{value:"Params",paraId:91,tocIndex:25},{value:"a",paraId:92,tocIndex:25},{value:" ",paraId:92,tocIndex:25},{value:"{any}",paraId:92,tocIndex:25},{value:"b",paraId:92,tocIndex:25},{value:" ",paraId:92,tocIndex:25},{value:"{any}",paraId:92,tocIndex:25},{value:"options",paraId:92,tocIndex:25},{value:" ",paraId:92,tocIndex:25},{value:"{Object}",paraId:92,tocIndex:25},{value:": Handlebars provided options object",paraId:92,tocIndex:25},{value:"returns",paraId:92,tocIndex:25},{value:" ",paraId:92,tocIndex:25},{value:"{String}",paraId:92,tocIndex:25},{value:": Block, or inverse block if specified and falsey.",paraId:92,tocIndex:25},{value:"Block helper that always renders the inverse block ",paraId:93,tocIndex:26},{value:"unless ",paraId:93,tocIndex:26},{value:"a",paraId:93,tocIndex:26},{value:` is
is less than or equal to `,paraId:93,tocIndex:26},{value:"b",paraId:93,tocIndex:26},{value:".",paraId:93,tocIndex:26},{value:"Params",paraId:94,tocIndex:26},{value:"a",paraId:95,tocIndex:26},{value:" ",paraId:95,tocIndex:26},{value:"{any}",paraId:95,tocIndex:26},{value:"b",paraId:95,tocIndex:26},{value:" ",paraId:95,tocIndex:26},{value:"{any}",paraId:95,tocIndex:26},{value:"options",paraId:95,tocIndex:26},{value:" ",paraId:95,tocIndex:26},{value:"{Object}",paraId:95,tocIndex:26},{value:": Handlebars provided options object",paraId:95,tocIndex:26},{value:"returns",paraId:95,tocIndex:26},{value:" ",paraId:95,tocIndex:26},{value:"{String}",paraId:95,tocIndex:26},{value:": Block, or inverse block if specified and falsey.",paraId:95,tocIndex:26}]}}]);
