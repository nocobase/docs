"use strict";(self.webpackChunknocobase_docs=self.webpackChunknocobase_docs||[]).push([[9746],{724376:function(o,s,a){a.r(s);var d=a(572269),u=a(793359),h=a(861788),_=a(719977),v=a(20190),n=a(24268),l=a(496057),I=a(585939),p=a(28484),m=a(635206),j=a(375553),g=a(156266),f=a(572333),P=a(841118),E=a(39297),k=a(868526),C=a(605019),c=a(614651),r=a(280936),i=a(667294),t=a(740409),e=a(785893);function x(){return(0,e.jsx)(c.dY,{children:(0,e.jsx)(i.Suspense,{fallback:(0,e.jsx)(r.Z,{}),children:(0,e.jsx)(e.Fragment,{children:(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsxs)("h1",{id:"end-to-end",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#end-to-end",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"End-to-End"]}),(0,e.jsxs)("h2",{id:"overview",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#overview",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Overview"]}),(0,e.jsxs)("p",{children:[t.texts[0].value,(0,e.jsx)("a",{href:"https://playwright.dev/",children:t.texts[1].value}),t.texts[2].value]}),(0,e.jsxs)("h3",{id:"mockpage",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#mockpage",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"mockPage"]}),(0,e.jsx)("p",{children:t.texts[3].value}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[4].value})}),(0,e.jsx)("ul",{children:(0,e.jsx)("li",{children:(0,e.jsx)("code",{children:t.texts[5].value})})}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[6].value})}),(0,e.jsxs)(l.Z,{children:[(0,e.jsx)("thead",{children:(0,e.jsxs)("tr",{children:[(0,e.jsx)("th",{children:t.texts[7].value}),(0,e.jsx)("th",{children:t.texts[8].value}),(0,e.jsx)("th",{children:t.texts[9].value}),(0,e.jsx)("th",{children:t.texts[10].value})]})}),(0,e.jsxs)("tbody",{children:[(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[11].value})}),(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[12].value})}),(0,e.jsx)("td",{children:t.texts[13].value}),(0,e.jsx)("td",{children:t.texts[14].value})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[15].value})}),(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[16].value})}),(0,e.jsx)("td",{children:t.texts[17].value}),(0,e.jsx)("td",{children:t.texts[18].value})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[19].value})}),(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[20].value})}),(0,e.jsx)("td",{children:t.texts[21].value}),(0,e.jsxs)("td",{children:[t.texts[22].value,(0,e.jsx)("code",{children:t.texts[23].value}),t.texts[24].value]})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[25].value})}),(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[26].value})}),(0,e.jsx)("td",{children:t.texts[27].value}),(0,e.jsx)("td",{children:t.texts[28].value})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[29].value})}),(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[30].value})}),(0,e.jsx)("td",{children:t.texts[31].value}),(0,e.jsx)("td",{children:t.texts[32].value})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:t.texts[33].value})}),(0,e.jsx)("td",{children:t.texts[34].value}),(0,e.jsx)("td",{children:t.texts[35].value}),(0,e.jsx)("td",{children:t.texts[36].value})]})]})]}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[37].value})}),(0,e.jsx)("p",{children:t.texts[38].value}),(0,e.jsx)(n.Z,{lang:"ts",children:t.texts[39].value}),(0,e.jsxs)("h3",{id:"mockmanualdestroypage",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#mockmanualdestroypage",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"mockManualDestroyPage"]}),(0,e.jsx)("p",{children:t.texts[40].value}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[41].value})}),(0,e.jsx)("ul",{children:(0,e.jsx)("li",{children:(0,e.jsx)("code",{children:t.texts[42].value})})}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[43].value})}),(0,e.jsxs)("p",{children:[t.texts[44].value,(0,e.jsx)("code",{children:t.texts[45].value}),t.texts[46].value]}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[47].value})}),(0,e.jsx)("p",{children:t.texts[48].value}),(0,e.jsx)(n.Z,{lang:"ts",children:t.texts[49].value}),(0,e.jsxs)("h3",{id:"mockcollections",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#mockcollections",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"mockCollections"]}),(0,e.jsx)("p",{children:t.texts[50].value}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[51].value})}),(0,e.jsx)("ul",{children:(0,e.jsx)("li",{children:(0,e.jsx)("code",{children:t.texts[52].value})})}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[53].value})}),(0,e.jsxs)("p",{children:[t.texts[54].value,(0,e.jsx)("a",{href:"https://github.com/nocobase/nocobase/blob/323b527aeb46aee2bc23387fddc54f39a9504739/packages/core/test/src/e2e/e2eUtils.ts#L11-L90",children:t.texts[55].value}),t.texts[56].value]}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[57].value})}),(0,e.jsxs)("p",{children:[t.texts[58].value,(0,e.jsx)("code",{children:t.texts[59].value}),t.texts[60].value]}),(0,e.jsx)(n.Z,{lang:"ts",children:t.texts[61].value}),(0,e.jsxs)("h3",{id:"mockcollection",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#mockcollection",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"mockCollection"]}),(0,e.jsx)("p",{children:t.texts[62].value}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[63].value})}),(0,e.jsx)("ul",{children:(0,e.jsx)("li",{children:(0,e.jsx)("code",{children:t.texts[64].value})})}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[65].value})}),(0,e.jsxs)("p",{children:[t.texts[66].value,(0,e.jsx)("a",{href:"https://github.com/nocobase/nocobase/blob/323b527aeb46aee2bc23387fddc54f39a9504739/packages/core/test/src/e2e/e2eUtils.ts#L11-L90",children:t.texts[67].value}),t.texts[68].value]}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[69].value})}),(0,e.jsxs)("p",{children:[t.texts[70].value,(0,e.jsx)("code",{children:t.texts[71].value}),t.texts[72].value]}),(0,e.jsx)(n.Z,{lang:"ts",children:t.texts[73].value}),(0,e.jsxs)("h3",{id:"mockrecords",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#mockrecords",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"mockRecords"]}),(0,e.jsx)("p",{children:t.texts[74].value}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[75].value})}),(0,e.jsxs)("ul",{children:[(0,e.jsx)("li",{children:(0,e.jsx)("code",{children:t.texts[76].value})}),(0,e.jsx)("li",{children:(0,e.jsx)("code",{children:t.texts[77].value})})]}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[78].value})}),(0,e.jsxs)("p",{children:[t.texts[79].value,(0,e.jsx)("a",{href:"https://github.com/nocobase/nocobase/blob/323b527aeb46aee2bc23387fddc54f39a9504739/packages/core/test/src/e2e/e2eUtils.ts#L166-L177",children:t.texts[80].value}),t.texts[81].value]}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[82].value})}),(0,e.jsxs)("p",{children:[t.texts[83].value,(0,e.jsx)("code",{children:t.texts[84].value}),t.texts[85].value]}),(0,e.jsx)(n.Z,{lang:"ts",children:t.texts[86].value}),(0,e.jsx)("p",{children:t.texts[87].value}),(0,e.jsx)(n.Z,{lang:"ts",children:t.texts[88].value}),(0,e.jsxs)("h3",{id:"mockrecord",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#mockrecord",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"mockRecord"]}),(0,e.jsx)("p",{children:t.texts[89].value}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[90].value})}),(0,e.jsx)("ul",{children:(0,e.jsx)("li",{children:(0,e.jsx)("code",{children:t.texts[91].value})})}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[92].value})}),(0,e.jsxs)("p",{children:[t.texts[93].value,(0,e.jsx)("a",{href:"https://github.com/nocobase/nocobase/blob/323b527aeb46aee2bc23387fddc54f39a9504739/packages/core/test/src/e2e/e2eUtils.ts#L156-L162",children:t.texts[94].value}),t.texts[95].value]}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:t.texts[96].value})}),(0,e.jsxs)("p",{children:[t.texts[97].value,(0,e.jsx)("code",{children:t.texts[98].value}),t.texts[99].value]}),(0,e.jsx)(n.Z,{lang:"ts",children:t.texts[100].value})]})})})})}s.default=x},740409:function(o,s,a){a.r(s),a.d(s,{texts:function(){return d}});const d=[{value:"NocoBase uses ",paraId:0,tocIndex:1},{value:"Playwright",paraId:0,tocIndex:1},{value:" for end-to-end (E2E) testing and provides some mock methods to simplify test writing.",paraId:0,tocIndex:1},{value:"Generates a NocoBase page based on the configuration.",paraId:1,tocIndex:2},{value:"Signature",paraId:2,tocIndex:2},{value:"mockPage(pageConfig?: PageConfig): NocoPage",paraId:3,tocIndex:2},{value:"Parameters",paraId:4,tocIndex:2},{value:"Parameter",paraId:5,tocIndex:2},{value:"Type",paraId:5,tocIndex:2},{value:"Default",paraId:5,tocIndex:2},{value:"Description",paraId:5,tocIndex:2},{value:"pageConfig.type",paraId:5,tocIndex:2},{value:"'group' | 'page' | 'link'",paraId:5,tocIndex:2},{value:"'page'",paraId:5,tocIndex:2},{value:"Type of page",paraId:5,tocIndex:2},{value:"pageConfig.name",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"Name of the page visible to users",paraId:5,tocIndex:2},{value:"pageConfig.url",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"URL to navigate when ",paraId:5,tocIndex:2},{value:"type",paraId:5,tocIndex:2},{value:" is 'link'",paraId:5,tocIndex:2},{value:"pageConfig.basePath",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:"'/admin/'",paraId:5,tocIndex:2},{value:"Base path of the page",paraId:5,tocIndex:2},{value:"pageConfig.collections",paraId:5,tocIndex:2},{value:"CollectionSetting[]",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"Configuration of collections on the page",paraId:5,tocIndex:2},{value:"pageConfig.pageSchema",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"Schema of the entire page",paraId:5,tocIndex:2},{value:"Example",paraId:6,tocIndex:2},{value:"Create an empty page that will be automatically deleted after the current test case finishes running.",paraId:7,tocIndex:2},{value:`import { test } from '@nocobase/test/e2e';

test('learn how to use mockPage', async ({ mockPage }) => {
  const nocoPage = await mockPage();
  await nocoPage.goto();
});
`,paraId:8,tocIndex:2},{value:"Generates a page instance that needs to be manually destroyed.",paraId:9,tocIndex:3},{value:"Signature",paraId:10,tocIndex:3},{value:"mockManualDestroyPage(pageConfig?: PageConfig): NocoPage",paraId:11,tocIndex:3},{value:"Parameters",paraId:12,tocIndex:3},{value:"Same as ",paraId:13,tocIndex:3},{value:"mockPage",paraId:13,tocIndex:3},{value:".",paraId:13,tocIndex:3},{value:"Example",paraId:14,tocIndex:3},{value:"Create an empty page that needs to be manually destroyed. Use this method when multiple test cases share the same page to avoid creating identical pages repeatedly.",paraId:15,tocIndex:3},{value:`import { test } from '@nocobase/test/e2e';

let nocoPage;

test.beforeAll(async ({ mockManualDestroyPage }) => {
  nocoPage = await mockManualDestroyPage();
});

test.afterAll(async () => {
  await nocoPage.destroy();
});

test('learn how to use mockManualDestroyPage', async ({ page }) => {
  // Use page.goto method to navigate
  await page.goto(nocoPage.getUrl());
});
`,paraId:16,tocIndex:3},{value:"Generates multiple collections based on the configuration.",paraId:17,tocIndex:4},{value:"Signature",paraId:18,tocIndex:4},{value:"mockCollections(collectionSettings: CollectionSetting[]): Promise<void>",paraId:19,tocIndex:4},{value:"Parameters",paraId:20,tocIndex:4},{value:"Refer to the definition of ",paraId:21,tocIndex:4},{value:"CollectionSetting",paraId:21,tocIndex:4},{value:" type.",paraId:21,tocIndex:4},{value:"Example",paraId:22,tocIndex:4},{value:"Create a collection named ",paraId:23,tocIndex:4},{value:"posts",paraId:23,tocIndex:4},{value:".",paraId:23,tocIndex:4},{value:`import { test } from '@nocobase/test/e2e';

test('learn how to use mockCollections', async ({ mockCollections }) => {
  await mockCollections([
    {
      name: 'posts',
    },
  ]);
});
`,paraId:24,tocIndex:4},{value:"Generates a collection based on the configuration.",paraId:25,tocIndex:5},{value:"Signature",paraId:26,tocIndex:5},{value:"mockCollection(collectionSetting: CollectionSetting): Promise<void>",paraId:27,tocIndex:5},{value:"Parameters",paraId:28,tocIndex:5},{value:"Refer to the definition of ",paraId:29,tocIndex:5},{value:"CollectionSetting",paraId:29,tocIndex:5},{value:" type.",paraId:29,tocIndex:5},{value:"Example",paraId:30,tocIndex:5},{value:"Create a collection named ",paraId:31,tocIndex:5},{value:"posts",paraId:31,tocIndex:5},{value:".",paraId:31,tocIndex:5},{value:`import { test } from '@nocobase/test/e2e';

test('learn how to use mockCollection', async ({ mockCollection }) => {
  await mockCollection({
    name: 'posts',
  });
});
`,paraId:32,tocIndex:5},{value:"Generates data for multiple collections.",paraId:33,tocIndex:6},{value:"Signature",paraId:34,tocIndex:6},{value:"mockRecords<T>(collectionName: string, count?: number): Promise<T>",paraId:35,tocIndex:6},{value:"mockRecords<T>(collectionName: string, records?: T[]): Promise<T[]>",paraId:35,tocIndex:6},{value:"Parameters",paraId:36,tocIndex:6},{value:"Refer to the type definition ",paraId:37,tocIndex:6},{value:"here",paraId:37,tocIndex:6},{value:".",paraId:37,tocIndex:6},{value:"Example",paraId:38,tocIndex:6},{value:"Create 10 records for the ",paraId:39,tocIndex:6},{value:"posts",paraId:39,tocIndex:6},{value:" collection.",paraId:39,tocIndex:6},{value:`import { test } from '@nocobase/test/e2e';

test('learn how to use mockRecords', async ({ mockRecords }) => {
  await mockRecords('posts', 10);
});
`,paraId:40,tocIndex:6},{value:"Customize the value of a field.",paraId:41,tocIndex:6},{value:`import { test } from '@nocobase/test/e2e';

test('learn how to use mockRecords', async ({ mockRecords }) => {
  // Create a record with the title 'hello world'
  await mockRecords('posts', [
    {
      title: 'hello world',
    },
  ]);
});
`,paraId:42,tocIndex:6},{value:"Generates data for a single collection.",paraId:43,tocIndex:7},{value:"Signature",paraId:44,tocIndex:7},{value:"mockRecord<T>(collectionName: string, data?: T): Promise<T>",paraId:45,tocIndex:7},{value:"Parameters",paraId:46,tocIndex:7},{value:"Refer to the type definition ",paraId:47,tocIndex:7},{value:"here",paraId:47,tocIndex:7},{value:".",paraId:47,tocIndex:7},{value:"Example",paraId:48,tocIndex:7},{value:"Create a record for the ",paraId:49,tocIndex:7},{value:"posts",paraId:49,tocIndex:7},{value:" collection.",paraId:49,tocIndex:7},{value:`import { test } from '@nocobase/test/e2e';

test('learn how to use mockRecord', async ({ mockRecord }) => {
  await mockRecord('posts');
});
`,paraId:50,tocIndex:7}]}}]);
