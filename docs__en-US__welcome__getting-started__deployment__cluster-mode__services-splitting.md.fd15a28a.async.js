"use strict";(self.webpackChunknocobase_docs=self.webpackChunknocobase_docs||[]).push([[3130],{20698:function(t,n,a){a.r(n);var d=a(572269),o=a(793359),_=a(861788),x=a(719977),v=a(20190),l=a(24268),h=a(496057),I=a(585939),p=a(28484),m=a(635206),j=a(375553),E=a(156266),f=a(572333),O=a(841118),M=a(39297),D=a(868526),g=a(605019),r=a(614651),c=a(280936),i=a(667294),s=a(501784),e=a(785893);function u(){return(0,e.jsx)(r.dY,{children:(0,e.jsx)(i.Suspense,{fallback:(0,e.jsx)(c.Z,{}),children:(0,e.jsx)(e.Fragment,{children:(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsxs)("h1",{id:"service-splitting",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#service-splitting",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Service Splitting ",(0,e.jsx)(o.Z,{children:s.texts[0].value})]}),(0,e.jsx)("p",{children:s.texts[1].value}),(0,e.jsx)("p",{children:s.texts[2].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/20250803214857.png",alt:"20250803214857"})}),(0,e.jsxs)("h2",{id:"how-to-split-services",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#how-to-split-services",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"How to Split Services"]}),(0,e.jsxs)("p",{children:[s.texts[3].value,(0,e.jsx)("code",{children:s.texts[4].value}),s.texts[5].value]}),(0,e.jsxs)("ul",{children:[(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[6].value}),s.texts[7].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[8].value}),s.texts[9].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[10].value}),s.texts[11].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[12].value}),s.texts[13].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[14].value}),s.texts[15].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[16].value}),s.texts[17].value]})]}),(0,e.jsx)("p",{children:s.texts[18].value}),(0,e.jsxs)("h2",{id:"splittable-services",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#splittable-services",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Splittable Services"]}),(0,e.jsxs)("h3",{id:"asynchronous-workflows",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#asynchronous-workflows",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Asynchronous Workflows"]}),(0,e.jsxs)("p",{children:[(0,e.jsx)("strong",{children:s.texts[19].value}),s.texts[20].value,(0,e.jsx)("code",{children:s.texts[21].value})]}),(0,e.jsx)("p",{children:s.texts[22].value}),(0,e.jsxs)("h3",{id:"other-user-level-async-tasks",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#other-user-level-async-tasks",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Other User-Level Async Tasks"]}),(0,e.jsxs)("p",{children:[(0,e.jsx)("strong",{children:s.texts[23].value}),s.texts[24].value,(0,e.jsx)("code",{children:s.texts[25].value})]}),(0,e.jsx)("p",{children:s.texts[26].value}),(0,e.jsxs)("h2",{id:"configuration-examples",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#configuration-examples",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Configuration Examples"]}),(0,e.jsxs)("h3",{id:"separate-roles-for-each-node",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#separate-roles-for-each-node",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Separate Roles for Each Node"]}),(0,e.jsxs)("p",{children:[s.texts[27].value,(0,e.jsx)("code",{children:s.texts[28].value}),s.texts[29].value,(0,e.jsx)("code",{children:s.texts[30].value}),s.texts[31].value,(0,e.jsx)("code",{children:s.texts[32].value}),s.texts[33].value]}),(0,e.jsxs)("ul",{children:[(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[34].value}),s.texts[35].value,(0,e.jsx)("code",{children:s.texts[36].value})]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[37].value}),s.texts[38].value,(0,e.jsx)("code",{children:s.texts[39].value})]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[40].value}),s.texts[41].value,(0,e.jsx)("code",{children:s.texts[42].value})]})]}),(0,e.jsxs)("h3",{id:"mixed-roles-across-nodes",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#mixed-roles-across-nodes",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Mixed Roles Across Nodes"]}),(0,e.jsxs)("p",{children:[s.texts[43].value,(0,e.jsx)("code",{children:s.texts[44].value}),s.texts[45].value,(0,e.jsx)("code",{children:s.texts[46].value}),s.texts[47].value,(0,e.jsx)("code",{children:s.texts[48].value}),s.texts[49].value,(0,e.jsx)("code",{children:s.texts[50].value}),s.texts[51].value]}),(0,e.jsxs)("ul",{children:[(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[52].value}),s.texts[53].value,(0,e.jsx)("code",{children:s.texts[54].value}),s.texts[55].value,(0,e.jsx)("code",{children:s.texts[56].value}),s.texts[57].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:s.texts[58].value}),s.texts[59].value,(0,e.jsx)("code",{children:s.texts[60].value}),s.texts[61].value,(0,e.jsx)("code",{children:s.texts[62].value})]})]}),(0,e.jsxs)("h2",{id:"development-guide",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#development-guide",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Development Guide"]}),(0,e.jsx)("p",{children:s.texts[63].value}),(0,e.jsxs)("ol",{children:[(0,e.jsxs)("li",{children:[s.texts[64].value,(0,e.jsx)("code",{children:s.texts[65].value}),s.texts[66].value]}),(0,e.jsxs)("li",{children:[s.texts[67].value,(0,e.jsx)("code",{children:s.texts[68].value}),s.texts[69].value]})]}),(0,e.jsx)(l.Z,{lang:"javascript",children:s.texts[70].value})]})})})})}n.default=u},501784:function(t,n,a){a.r(n),a.d(n,{texts:function(){return d}});const d=[{value:"v1.9.0+",paraId:0},{value:"By default, all services in a NocoBase application run in a single Node.js instance. As features become more complex over time, some time-consuming services may affect overall performance. To improve performance, NocoBase supports running services on different nodes in cluster mode. This prevents a single service's performance issues from affecting the entire application\u2019s responsiveness. It also allows specific services to be scaled horizontally to optimize resource usage.",paraId:1,tocIndex:0},{value:"When deployed in a cluster, NocoBase allows different services to run on different nodes. The diagram below illustrates this structure:",paraId:2,tocIndex:0},{value:"To split services across nodes, configure the ",paraId:3,tocIndex:1},{value:"WORKER_MODE",paraId:3,tocIndex:1},{value:" environment variable as follows:",paraId:3,tocIndex:1},{value:"WORKER_MODE=<empty>",paraId:4,tocIndex:1},{value:": Default mode, handles both requests and tasks. Fully compatible with non-cluster setups.",paraId:4,tocIndex:1},{value:"WORKER_MODE=!",paraId:4,tocIndex:1},{value:": Only handles requests, no background tasks.",paraId:4,tocIndex:1},{value:"WORKER_MODE=workflow:process,async-task:process",paraId:4,tocIndex:1},{value:": Only handles specified background tasks, does not process requests.",paraId:4,tocIndex:1},{value:"WORKER_MODE=*",paraId:4,tocIndex:1},{value:": Handles all background tasks, no request handling.",paraId:4,tocIndex:1},{value:"WORKER_MODE=!,workflow:process",paraId:4,tocIndex:1},{value:": Handles requests and specific background tasks.",paraId:4,tocIndex:1},{value:"WORKER_MODE=-",paraId:4,tocIndex:1},{value:": Handles neither requests nor tasks (used in worker processes).",paraId:4,tocIndex:1},{value:"In Kubernetes (K8S), nodes with the same role can be configured using the same environment variable for easy horizontal scaling.",paraId:5,tocIndex:1},{value:"Service KEY",paraId:6,tocIndex:3},{value:": ",paraId:6,tocIndex:3},{value:"workflow:process",paraId:6,tocIndex:3},{value:"These workflows queue up for processing and do not require users to wait for a result. Heavy or frequent workflows should be assigned to dedicated nodes.",paraId:7,tocIndex:3},{value:"Service KEY",paraId:8,tocIndex:4},{value:": ",paraId:8,tocIndex:4},{value:"async-task:process",paraId:8,tocIndex:4},{value:"Includes tasks like async import/export. Dedicated nodes are recommended under heavy load or high concurrency.",paraId:9,tocIndex:4},{value:"For three nodes: ",paraId:10,tocIndex:6},{value:"node1",paraId:10,tocIndex:6},{value:", ",paraId:10,tocIndex:6},{value:"node2",paraId:10,tocIndex:6},{value:", and ",paraId:10,tocIndex:6},{value:"node3",paraId:10,tocIndex:6},{value:":",paraId:10,tocIndex:6},{value:"node1",paraId:11,tocIndex:6},{value:": Handles only UI requests \u2013 ",paraId:11,tocIndex:6},{value:"WORKER_MODE=!",paraId:11,tocIndex:6},{value:"node2",paraId:11,tocIndex:6},{value:": Handles only workflow tasks \u2013 ",paraId:11,tocIndex:6},{value:"WORKER_MODE=workflow:process",paraId:11,tocIndex:6},{value:"node3",paraId:11,tocIndex:6},{value:": Handles only async tasks \u2013 ",paraId:11,tocIndex:6},{value:"WORKER_MODE=async-task:process",paraId:11,tocIndex:6},{value:"For four nodes: ",paraId:12,tocIndex:7},{value:"node1",paraId:12,tocIndex:7},{value:", ",paraId:12,tocIndex:7},{value:"node2",paraId:12,tocIndex:7},{value:", ",paraId:12,tocIndex:7},{value:"node3",paraId:12,tocIndex:7},{value:", and ",paraId:12,tocIndex:7},{value:"node4",paraId:12,tocIndex:7},{value:":",paraId:12,tocIndex:7},{value:"node1",paraId:13,tocIndex:7},{value:" and ",paraId:13,tocIndex:7},{value:"node2",paraId:13,tocIndex:7},{value:": Handle requests \u2013 ",paraId:13,tocIndex:7},{value:"WORKER_MODE=!",paraId:13,tocIndex:7},{value:" (with load balancing)",paraId:13,tocIndex:7},{value:"node3",paraId:13,tocIndex:7},{value:" and ",paraId:13,tocIndex:7},{value:"node4",paraId:13,tocIndex:7},{value:": Handle all background tasks \u2013 ",paraId:13,tocIndex:7},{value:"WORKER_MODE=*",paraId:13,tocIndex:7},{value:"When developing plugins, resource-intensive services can be split using the following pattern:",paraId:14,tocIndex:8},{value:"Define a new service key (e.g., ",paraId:15,tocIndex:8},{value:"my-plugin:process",paraId:15,tocIndex:8},{value:") and document its use.",paraId:15,tocIndex:8},{value:"In the plugin backend, use ",paraId:15,tocIndex:8},{value:"app.serving()",paraId:15,tocIndex:8},{value:" to determine if the current node should handle the service.",paraId:15,tocIndex:8},{value:`const MY_PLUGIN_SERVICE_KEY = 'my-plugin:process';
// Inside plugin backend
if (this.app.serving(MY_PLUGIN_SERVICE_KEY)) {
  // Handle business logic
} else {
  // Skip handling
}
`,paraId:16,tocIndex:8}]}}]);
