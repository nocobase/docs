"use strict";(self.webpackChunknocobase_docs=self.webpackChunknocobase_docs||[]).push([[50208],{491729:function(i,n,a){a.r(n);var s=a(572269),_=a(793359),h=a(861788),u=a(719977),x=a(20190),m=a(24268),v=a(496057),p=a(585939),b=a(28484),g=a(635206),j=a(375553),f=a(156266),I=a(572333),o=a(841118),E=a(39297),M=a(868526),P=a(605019),d=a(614651),r=a(280936),l=a(667294),t=a(553383),e=a(785893);function c(){return(0,e.jsx)(d.dY,{children:(0,e.jsx)(l.Suspense,{fallback:(0,e.jsx)(r.Z,{}),children:(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("div",{className:"markdown",children:(0,e.jsxs)("h1",{id:"variable",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#variable",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Variable"]})}),(0,e.jsx)(o.Z,{name:"workflow-variable",link:"/handbook/workflow-variable",commercial:"true"}),(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsx)("p",{children:t.texts[0].value}),(0,e.jsxs)("h2",{id:"user-manual",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#user-manual",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"User Manual"]}),(0,e.jsxs)("h3",{id:"creating-nodes",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#creating-nodes",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Creating Nodes"]}),(0,e.jsx)("p",{children:t.texts[1].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/53b1e48e777bfff7f2a08271526ef3ee.png",alt:"Add Variable Node"})}),(0,e.jsxs)("h3",{id:"configuring-nodes",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#configuring-nodes",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Configuring Nodes"]}),(0,e.jsxs)("h4",{id:"mode",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#mode",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Mode"]}),(0,e.jsx)("p",{children:t.texts[2].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/49d8b7b501de6faef6f303262aa14550.png",alt:"Select Mode"})}),(0,e.jsxs)("ul",{children:[(0,e.jsx)("li",{children:t.texts[3].value}),(0,e.jsx)("li",{children:t.texts[4].value})]}),(0,e.jsx)("p",{children:t.texts[5].value}),(0,e.jsx)("p",{children:t.texts[6].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/1ce8911548d7347e693d8cc8ac1953eb.png",alt:"Select the Variable to Assign"})}),(0,e.jsxs)("h4",{id:"value",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#value",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Value"]}),(0,e.jsx)("p",{children:t.texts[7].value}),(0,e.jsx)("p",{children:t.texts[8].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/4ce2c508986565ad537343013758c6a4.png",alt:"Declare Initial Value"})}),(0,e.jsx)("p",{children:t.texts[9].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/858bae180712ad279ae6a964a77a7659.png",alt:"Assign Trigger Variable Value to Declared Variable"})}),(0,e.jsxs)("h3",{id:"using-variable-values",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#using-variable-values",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Using Variable Values"]}),(0,e.jsx)("p",{children:t.texts[10].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/1ca91c295254ff85999a1751499f14bc.png",alt:"Use Variable Value as Query Filter Condition"})}),(0,e.jsxs)("h3",{id:"example",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#example",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Example"]}),(0,e.jsxs)("p",{children:[t.texts[11].value,(0,e.jsx)("code",{children:t.texts[12].value}),t.texts[13].value,(0,e.jsx)("code",{children:t.texts[14].value}),t.texts[15].value]}),(0,e.jsx)("p",{children:t.texts[16].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/93327530a93c695c637d74cdfdcd5cde.png",alt:"Configure Trigger"})}),(0,e.jsx)("p",{children:t.texts[17].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/d26fa4a7e7ee4f34e0d8392a51c6666e.png",alt:"Recipient Variable Node"})}),(0,e.jsx)("p",{children:t.texts[18].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/083fe62c943c17a643dc47ec2872e07c.png",alt:"Loop through Authors of the Article"})}),(0,e.jsx)("p",{children:t.texts[19].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/5d21a990162f32cb8818d27b16fd1bcd.png",alt:"Concatenate Recipient String"})}),(0,e.jsx)("p",{children:t.texts[20].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/fc40ed95dd9b61d924b7ca11b23f9482.png",alt:"Assign Concatenated Recipient String to Recipient Node"})}),(0,e.jsx)("p",{children:t.texts[21].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/37f71aa1a63e172bcb2dce10a250947e.png",alt:"Send Email to Recipient through Request Node"})}),(0,e.jsx)("p",{children:t.texts[22].value})]})]})})})}n.default=c},553383:function(i,n,a){a.r(n),a.d(n,{texts:function(){return s}});const s=[{value:"In workflows, variables can be declared or assigned values to existing ones, typically to store temporary data during the process.",paraId:0},{value:'To add a "Variable" node in the workflow configuration interface, click the plus (\u201C+\u201D) button in the process:',paraId:1,tocIndex:2},{value:"Like programming variables, a variable node must first be declared before it can be used or assigned a value. When creating a variable node, you must choose its mode. There are two options:",paraId:2,tocIndex:4},{value:"Declare a new variable: This creates a new variable.",paraId:3,tocIndex:4},{value:"Assign value to an existing variable: This assigns a value to a previously declared variable, effectively updating its value.",paraId:3,tocIndex:4},{value:"If the node being created is the first variable node in the process, only the declare mode is available, as there are no pre-existing variables to assign values to.",paraId:4,tocIndex:4},{value:"When assigning a value to an existing variable, you\u2019ll need to select the target variable, which is the node where the variable was originally declared:",paraId:5,tocIndex:4},{value:"The value of a variable can be of any type\u2014such as a constant (e.g., strings, numbers, booleans, dates) or another variable within the workflow.",paraId:6,tocIndex:5},{value:"In declare mode, setting a variable value is equivalent to assigning it an initial value.",paraId:7,tocIndex:5},{value:"In assign mode, setting a variable value modifies the value of the target variable to the new value, which will be used in subsequent steps.",paraId:8,tocIndex:5},{value:'In nodes following the variable node, you can use the value of the variable by selecting it from the "Node result" group. For example, in a query node, the value of a variable can be used as a query condition:',paraId:9,tocIndex:6},{value:"Variable nodes are particularly useful in branches where new values need to be calculated or combined with existing values (similar to ",paraId:10,tocIndex:7},{value:"reduce",paraId:10,tocIndex:7},{value:" or ",paraId:10,tocIndex:7},{value:"concat",paraId:10,tocIndex:7},{value:" in programming). These values can then be used after the branch ends. The following example demonstrates how to create a concatenated recipient string using loop and variable nodes.",paraId:10,tocIndex:7},{value:'Start by creating a workflow triggered by a data table update. This workflow will be activated when "Article" data is updated, and it preloads the related "Authors" relational data (used to get recipients):',paraId:11,tocIndex:7},{value:"Next, create a variable node to store the recipient string:",paraId:12,tocIndex:7},{value:"Then, create a loop branch node to iterate over the authors of the article and concatenate their details into the recipient variable:",paraId:13,tocIndex:7},{value:"Within the loop branch, first create a Operator node to concatenate the current author with the stored author string:",paraId:14,tocIndex:7},{value:"After the Operator node, create another variable node in assign mode. Select the recipient variable node as the target, and set its value to the result of the Operator node:",paraId:15,tocIndex:7},{value:"When the loop branch ends, the recipient variable will store the concatenated recipient string of all the article's authors. You can then use an HTTP request node after the loop to call the email-sending interface, passing the recipient variable\u2019s value as the recipient parameter:",paraId:16,tocIndex:7},{value:"In this way, a simple bulk email function is implemented using loop and variable nodes.",paraId:17,tocIndex:7}]}}]);
