"use strict";(self.webpackChunknocobase_docs=self.webpackChunknocobase_docs||[]).push([[82173],{66859:function(r,o,t){t.r(o);var d=t(572269),h=t(793359),p=t(861788),l=t(719977),v=t(20190),n=t(24268),c=t(496057),I=t(585939),m=t(28484),j=t(635206),g=t(375553),f=t(156266),_=t(572333),b=t(841118),P=t(39297),C=t(868526),w=t(605019),s=t(614651),i=t(280936),x=t(667294),a=t(954438),e=t(785893);function u(){return(0,e.jsx)(s.dY,{children:(0,e.jsx)(x.Suspense,{fallback:(0,e.jsx)(i.Z,{}),children:(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsxs)("h1",{id:"v020-2024-03-03",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#v020-2024-03-03",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"v0.20: 2024-03-03"]}),(0,e.jsxs)("h2",{id:"new-features",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#new-features",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"New Features"]}),(0,e.jsxs)("h3",{id:"support-for-multiple-data-sources",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#support-for-multiple-data-sources",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Support for Multiple Data Sources"]}),(0,e.jsxs)("p",{children:[a.texts[0].value,(0,e.jsx)(s.rU,{to:"/handbook/data-source-manager",children:a.texts[1].value}),a.texts[2].value]}),(0,e.jsxs)("ul",{children:[(0,e.jsxs)("li",{children:[(0,e.jsx)(s.rU,{to:"/handbook/data-source-main",children:a.texts[3].value}),a.texts[4].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)(s.rU,{to:"/handbook/data-source-external-mysql",children:a.texts[5].value}),a.texts[6].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)(s.rU,{to:"/handbook/data-source-external-mariadb",children:a.texts[7].value}),a.texts[8].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)(s.rU,{to:"/handbook/data-source-external-postgres",children:a.texts[9].value}),a.texts[10].value]})]}),(0,e.jsx)("p",{children:a.texts[11].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/fe8ecdaf640097eeb310c94a997b9090.png",alt:"Data Source Manager"})}),(0,e.jsxs)("h3",{id:"adjustment-to-collections-management",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#adjustment-to-collections-management",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Adjustment to Collections Management"]}),(0,e.jsx)("p",{children:a.texts[12].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/b5ad882a131e447f78b0c22a92ec9df6.gif",alt:"Main Database Configuration"})}),(0,e.jsxs)("h3",{id:"support-for-non-id-fields-as-primary-and-relationship-constraints",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#support-for-non-id-fields-as-primary-and-relationship-constraints",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Support for Non-ID Fields as Primary and Relationship Constraints"]}),(0,e.jsx)("p",{children:a.texts[13].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/87dc4101a884f97cbfce00f1891f7cf6.png",alt:"Predefined Fields"})}),(0,e.jsx)("p",{children:a.texts[14].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/cce37d7d8e9feaa66970da0c643a2d9d.png",alt:"Integer fields can be used as primary keys"})}),(0,e.jsx)("p",{children:a.texts[15].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/b2c797f52bedfcfa06936a244dd9be4b.png",alt:"Single-line text fields can also be used as primary keys"})}),(0,e.jsx)("p",{children:a.texts[16].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/e5515e58426c5be08ba982b0bb311410.png",alt:""})}),(0,e.jsxs)("h3",{id:"adjustment-to-drag-and-drop-sorting",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#adjustment-to-drag-and-drop-sorting",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Adjustment to Drag-and-Drop Sorting"]}),(0,e.jsx)("p",{children:a.texts[17].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/470891c7bb34c506328c1f3824a6cf20.png",alt:""})}),(0,e.jsx)("p",{children:a.texts[18].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/0794d0a9c0dc288a8fc924a3542bb86e.png",alt:""})}),(0,e.jsx)("p",{children:a.texts[19].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/20cf12fd7ca3d8c0aa1917a95c0a7e7c.png",alt:""})}),(0,e.jsx)("p",{children:a.texts[20].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/b810265790d6a1ec099e3d88d1361271.png",alt:""})}),(0,e.jsxs)("h3",{id:"adjustment-to-user-and-permission-interfaces",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#adjustment-to-user-and-permission-interfaces",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Adjustment to User and Permission Interfaces"]}),(0,e.jsx)("p",{children:a.texts[21].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/7be26746652098f07ce105dbae373522.png",alt:""})}),(0,e.jsx)("p",{children:a.texts[22].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/4ec942af764dfcec1ddc9a244816a6ee.png",alt:""})}),(0,e.jsx)("p",{children:a.texts[23].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/461ab881fe94a33f9a122e9734b85f4d.gif",alt:""})}),(0,e.jsxs)("h3",{id:"department-plugin",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#department-plugin",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Department Plugin"]}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/093473d9c23a789d41899df9bcaf3389.png",alt:""})}),(0,e.jsx)("p",{children:a.texts[24].value}),(0,e.jsxs)("h3",{id:"workflow-approval",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#workflow-approval",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Workflow: Approval"]}),(0,e.jsx)("p",{children:a.texts[25].value}),(0,e.jsx)("p",{children:a.texts[26].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/21acc5615ecc03aeeb44671ab945baea.png",alt:"Approval Configuration"})}),(0,e.jsx)("p",{children:a.texts[27].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/6a879641bd15de0648cd4602779ef9fa.png",alt:"Approval Process"})}),(0,e.jsxs)("p",{children:[a.texts[28].value,(0,e.jsx)(s.rU,{to:"/handbook/workflow-approval",children:a.texts[29].value})]}),(0,e.jsxs)("h3",{id:"workflow-end-process-node",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#workflow-end-process-node",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Workflow: End Process Node"]}),(0,e.jsx)("p",{children:a.texts[30].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/38d6352211d791fd4233f5cd4bdb34f2.png",alt:""})}),(0,e.jsxs)("p",{children:[a.texts[31].value,(0,e.jsx)(s.rU,{to:"/handbook/workflow/manual/nodes/end",children:a.texts[32].value})]}),(0,e.jsxs)("h3",{id:"workflow-custom-variable-node",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#workflow-custom-variable-node",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Workflow: Custom Variable Node"]}),(0,e.jsx)("p",{children:a.texts[33].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/c19913f99968d987a52aaa53578a7318.png",alt:""})}),(0,e.jsxs)("p",{children:[a.texts[34].value,(0,e.jsx)(s.rU,{to:"/handbook/workflow-variable",children:a.texts[35].value})]}),(0,e.jsxs)("h3",{id:"workflow-request-interceptor",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#workflow-request-interceptor",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Workflow: Request Interceptor"]}),(0,e.jsx)("p",{children:a.texts[36].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/3f3991aaf9d73b8c2f7c179e7702d16b.png",alt:""})}),(0,e.jsxs)("p",{children:[a.texts[37].value,(0,e.jsx)(s.rU,{to:"/handbook/workflow-request-interceptor",children:a.texts[38].value})]}),(0,e.jsxs)("h3",{id:"workflow-response-message-node",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#workflow-response-message-node",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Workflow: Response Message Node"]}),(0,e.jsx)("p",{children:a.texts[39].value}),(0,e.jsx)("p",{children:a.texts[40].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/4376843af541ef6a08696e074cb6cd07.png",alt:""})}),(0,e.jsx)("p",{children:a.texts[41].value}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/051f12855bd0ce74b22de191b8b87cf5.png",alt:""})}),(0,e.jsxs)("p",{children:[a.texts[42].value,(0,e.jsx)(s.rU,{to:"/handbook/workflow-response-message",children:a.texts[43].value})]}),(0,e.jsxs)("h2",{id:"incompatible-changes",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#incompatible-changes",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Incompatible Changes"]}),(0,e.jsxs)("h3",{id:"conflictingly-named-apis",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#conflictingly-named-apis",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Conflictingly Named APIs"]}),(0,e.jsxs)("p",{children:[a.texts[44].value,(0,e.jsx)("code",{children:a.texts[45].value}),a.texts[46].value]}),(0,e.jsxs)(c.Z,{children:[(0,e.jsx)("thead",{children:(0,e.jsxs)("tr",{children:[(0,e.jsx)("th",{children:a.texts[47].value}),(0,e.jsx)("th",{children:a.texts[48].value}),(0,e.jsx)("th",{children:a.texts[49].value})]})}),(0,e.jsxs)("tbody",{children:[(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:a.texts[50].value}),(0,e.jsx)("td",{children:a.texts[51].value}),(0,e.jsx)("td",{children:(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/core/data-source/collection-provider",children:a.texts[52].value})})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:a.texts[53].value}),(0,e.jsx)("td",{children:a.texts[54].value}),(0,e.jsx)("td",{children:(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/core/data-source/collection-provider#hooks",children:a.texts[55].value})})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:a.texts[56].value}),(0,e.jsx)("td",{children:a.texts[57].value}),(0,e.jsx)("td",{children:(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/core/data-source/collection-field#hooks",children:a.texts[58].value})})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:a.texts[59].value}),(0,e.jsx)("td",{children:a.texts[60].value}),(0,e.jsx)("td",{children:(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/core/data-source/collection-manager-provider#hooks",children:a.texts[61].value})})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:a.texts[62].value}),(0,e.jsx)("td",{children:a.texts[63].value}),(0,e.jsx)("td",{children:(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/core/data-source/collection-manager-provider#hooks",children:a.texts[64].value})})]})]})]}),(0,e.jsx)("p",{children:a.texts[65].value}),(0,e.jsxs)("ul",{children:[(0,e.jsxs)("li",{children:[a.texts[66].value,(0,e.jsx)("code",{children:a.texts[67].value}),a.texts[68].value,(0,e.jsx)("code",{children:a.texts[69].value}),a.texts[70].value,(0,e.jsx)("code",{children:a.texts[71].value}),a.texts[72].value]}),(0,e.jsx)("li",{children:a.texts[73].value})]}),(0,e.jsx)("p",{children:a.texts[74].value}),(0,e.jsxs)("h3",{id:"other-apis-requiring-adjustment",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#other-apis-requiring-adjustment",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Other APIs Requiring Adjustment"]}),(0,e.jsxs)("ul",{children:[(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[75].value}),a.texts[76].value,(0,e.jsx)("code",{children:a.texts[77].value})]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[78].value}),a.texts[79].value,(0,e.jsx)("code",{children:a.texts[80].value})]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[81].value}),a.texts[82].value,(0,e.jsx)("code",{children:a.texts[83].value})]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[84].value}),a.texts[85].value,(0,e.jsx)("code",{children:a.texts[86].value})]}),(0,e.jsxs)("li",{children:[a.texts[87].value,(0,e.jsx)("code",{children:a.texts[88].value})]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[89].value}),a.texts[90].value]})]}),(0,e.jsxs)("h2",{id:"change-examples",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#change-examples",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Change Examples"]}),(0,e.jsxs)("h3",{id:"collection-template-extension",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#collection-template-extension",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Collection Template Extension"]}),(0,e.jsxs)("h4",{id:"definition",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#definition",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Definition"]}),(0,e.jsx)("p",{children:a.texts[91].value}),(0,e.jsx)("p",{children:a.texts[92].value}),(0,e.jsx)(n.Z,{lang:"typescript",children:a.texts[93].value}),(0,e.jsx)("p",{children:a.texts[94].value}),(0,e.jsx)(n.Z,{lang:"typescript",children:a.texts[95].value}),(0,e.jsx)("p",{children:a.texts[96].value}),(0,e.jsxs)("h4",{id:"registration",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#registration",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Registration"]}),(0,e.jsxs)("p",{children:[a.texts[97].value,(0,e.jsx)("code",{children:a.texts[98].value}),a.texts[99].value,(0,e.jsx)("code",{children:a.texts[100].value}),a.texts[101].value]}),(0,e.jsx)("p",{children:a.texts[102].value}),(0,e.jsx)(n.Z,{lang:"typescript",children:a.texts[103].value}),(0,e.jsx)("p",{children:a.texts[104].value}),(0,e.jsx)(n.Z,{lang:"typescript",children:a.texts[105].value}),(0,e.jsxs)("h3",{id:"field-interface-extension",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#field-interface-extension",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Field Interface Extension"]}),(0,e.jsxs)("h4",{id:"definition-1",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#definition-1",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Definition"]}),(0,e.jsx)("p",{children:a.texts[106].value}),(0,e.jsx)("p",{children:a.texts[107].value}),(0,e.jsx)(n.Z,{lang:"typescript",children:a.texts[108].value}),(0,e.jsx)("p",{children:a.texts[109].value}),(0,e.jsx)(n.Z,{lang:"typescript",children:a.texts[110].value}),(0,e.jsx)("p",{children:a.texts[111].value}),(0,e.jsxs)("h4",{id:"registration-1",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#registration-1",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Registration"]}),(0,e.jsxs)("p",{children:[a.texts[112].value,(0,e.jsx)("code",{children:a.texts[113].value}),a.texts[114].value,(0,e.jsx)("code",{children:a.texts[115].value}),a.texts[116].value,(0,e.jsx)("code",{children:a.texts[117].value}),a.texts[118].value]}),(0,e.jsx)("p",{children:a.texts[119].value}),(0,e.jsx)(n.Z,{lang:"diff",children:a.texts[120].value}),(0,e.jsx)("p",{children:a.texts[121].value}),(0,e.jsx)(n.Z,{lang:"typescript",children:a.texts[122].value}),(0,e.jsxs)("h3",{id:"field-interface-group-extension",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#field-interface-group-extension",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Field Interface Group Extension"]}),(0,e.jsxs)("p",{children:[a.texts[123].value,(0,e.jsx)("code",{children:a.texts[124].value}),a.texts[125].value,(0,e.jsx)("code",{children:a.texts[126].value}),a.texts[127].value]}),(0,e.jsx)(n.Z,{lang:"diff",children:a.texts[128].value}),(0,e.jsxs)("h3",{id:"usecontextcollectionmanagercontext-changed-to-usecollectionmanager_deprecated",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#usecontextcollectionmanagercontext-changed-to-usecollectionmanager_deprecated",children:(0,e.jsx)("span",{className:"icon icon-link"})}),(0,e.jsx)("code",{children:a.texts[129].value})," Changed to ",(0,e.jsx)("code",{children:a.texts[130].value})]}),(0,e.jsx)(n.Z,{lang:"diff",children:a.texts[131].value}),(0,e.jsxs)("h3",{id:"extend-collections-use-extendcollectionsprovider-instead-of-collectionmanagerprovider",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#extend-collections-use-extendcollectionsprovider-instead-of-collectionmanagerprovider",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Extend Collections, Use ",(0,e.jsx)("code",{children:a.texts[132].value})," Instead of ",(0,e.jsx)("code",{children:a.texts[133].value})]}),(0,e.jsx)(n.Z,{lang:"diff",children:a.texts[134].value}),(0,e.jsxs)("h3",{id:"changes-to-recordprovider",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#changes-to-recordprovider",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Changes to RecordProvider"]}),(0,e.jsx)("p",{children:a.texts[135].value}),(0,e.jsx)(n.Z,{lang:"diff",children:a.texts[136].value}),(0,e.jsx)("p",{children:a.texts[137].value}),(0,e.jsx)(n.Z,{lang:"diff",children:a.texts[138].value})]}),(0,e.jsx)(l.Z,{type:"warning",title:"Difference Between RecordProvider and CollectionRecordProvider",children:(0,e.jsxs)("ul",{children:[(0,e.jsx)("li",{children:a.texts[139].value}),(0,e.jsx)("li",{children:a.texts[140].value})]})})]})})})}o.default=u},954438:function(r,o,t){t.r(o),t.d(o,{texts:function(){return d}});const d=[{value:'Added the "',paraId:0,tocIndex:2},{value:"Data Source Manager",paraId:1,tocIndex:2},{value:'" plugin, used to manage all collections and fields for data sources. The Data Source Manager plugin provides a centralized interface for managing data sources and does not provide the capability to access data sources. It needs to be used in conjunction with various data source plugins. Currently supported data sources include:',paraId:0,tocIndex:2},{value:"Main Database",paraId:2,tocIndex:2},{value:": NocoBase main database, supporting relational databases such as MySQL, PostgreSQL, SQLite, etc.",paraId:3,tocIndex:2},{value:"External MySQL Data Source",paraId:4,tocIndex:2},{value:": Access an existing MySQL database as a data source.",paraId:3,tocIndex:2},{value:"External MariaDB Data Source",paraId:5,tocIndex:2},{value:": Access an existing MariaDB database as a data source.",paraId:3,tocIndex:2},{value:"External PostgreSQL Data Source",paraId:6,tocIndex:2},{value:": Access an existing PostgreSQL database as a data source.",paraId:3,tocIndex:2},{value:"In addition, more data sources can be extended, which can be common types of databases or platforms that provide APIs (SDKs).",paraId:7,tocIndex:2},{value:'Moved the original "Collection Manager" to "Data Source > Main Database > Configuration".',paraId:8,tocIndex:3},{value:"When creating a collection, you can choose not to create an ID field.",paraId:9,tocIndex:4},{value:"Integer fields can be used as primary keys.",paraId:10,tocIndex:4},{value:"Single-line text fields can also be used as primary keys.",paraId:11,tocIndex:4},{value:"Relationship constraints support selecting other fields with Unique indexes set as non-primary key fields.",paraId:12,tocIndex:4},{value:'Added a "Sort" type field. Sorting fields are no longer automatically generated when creating collections and need to be manually created.',paraId:13,tocIndex:5},{value:"When selecting a field as a group, grouping will be done before sorting.",paraId:14,tocIndex:5},{value:"When enabling drag-and-drop sorting in table block, you need to select the sorting field.",paraId:15,tocIndex:5},{value:"When creating a Kanban block, you need to select the sorting field.",paraId:16,tocIndex:5},{value:"Added user management interface and unified user and role management under one menu.",paraId:17,tocIndex:6},{value:"Adjusted the role management interface to facilitate the management of user-associated roles, permissions, departments, etc.",paraId:18,tocIndex:6},{value:'Moved the original "Action Permissions" to the "Data Source" tab.',paraId:19,tocIndex:6},{value:"Organize users by departments, set hierarchical relationships, link roles to control permissions, and use departments as variables in workflows and expressions.",paraId:20,tocIndex:7},{value:`The approval plugin provides dedicated workflow types (triggers) "Initiate Approval" and "Approval" nodes for this process. Combined with NocoBase's unique custom data tables and custom blocks, various approval scenarios can be quickly and flexibly created and managed.`,paraId:21,tocIndex:8},{value:"Approval configuration",paraId:22,tocIndex:8},{value:"Approval process",paraId:23,tocIndex:8},{value:"Further details can be found in the documentation: ",paraId:24,tocIndex:8},{value:"Workflow Approval",paraId:25,tocIndex:8},{value:"This node immediately ends the current execution of the workflow when executed and ends with the status configured in the node. It is typically used for specific logic flow control, to exit the current workflow after meeting certain logical conditions, without continuing with subsequent processing. It can be likened to the return command in programming languages, used to exit the currently executing function.",paraId:26,tocIndex:9},{value:"Further details can be found in the documentation: ",paraId:27,tocIndex:9},{value:"End Process Node",paraId:28,tocIndex:9},{value:"Variables can be declared in the workflow or assigned values to previously declared variables, typically used to store temporary data in the workflow. It is suitable for scenarios where calculation results need to be stored for later use outside the branch (such as loops, parallelism, etc.).",paraId:29,tocIndex:10},{value:"Further details can be found in the documentation: ",paraId:30,tocIndex:10},{value:"Custom Variable Node",paraId:31,tocIndex:10},{value:'The request interceptor plugin provides a mechanism to intercept operations on forms, where the interception event is triggered after the corresponding form operation is submitted and before it is processed. If a "End Process" node is executed in the subsequent process flow after triggering, or if other nodes fail to execute (errors or other incomplete executions), the form operation will be intercepted, otherwise the scheduled operation will be executed normally. It can be used for business validation or logic checks to approve or intercept client-submitted create, update, and delete operations.',paraId:32,tocIndex:11},{value:"Further details can be found in the documentation: ",paraId:33,tocIndex:11},{value:"Request Interceptor",paraId:34,tocIndex:11},{value:"The response message node is used to provide feedback to the client with custom messages in specific types of workflows (such as request interception and form events).",paraId:35,tocIndex:12},{value:"Node configuration",paraId:36,tocIndex:12},{value:"Prompt message",paraId:37,tocIndex:12},{value:"Further details can be found in the documentation: ",paraId:38,tocIndex:12},{value:"Response Message Node",paraId:39,tocIndex:12},{value:"In this kernel change, some new version APIs conflict with the old version names. These conflicting old version APIs will be retained in this version but will be uniformly suffixed with ",paraId:40,tocIndex:14},{value:"_deprecated",paraId:40,tocIndex:14},{value:".",paraId:40,tocIndex:14},{value:"Original API",paraId:41,tocIndex:14},{value:"Deprecated API",paraId:41,tocIndex:14},{value:"New API",paraId:41,tocIndex:14},{value:"CollectionProvider",paraId:41,tocIndex:14},{value:"CollectionProvider_deprecated",paraId:41,tocIndex:14},{value:"CollectionProvider",paraId:41,tocIndex:14},{value:"useCollection",paraId:41,tocIndex:14},{value:"useCollection_deprecated",paraId:41,tocIndex:14},{value:"useCollection",paraId:41,tocIndex:14},{value:"useCollectionField",paraId:41,tocIndex:14},{value:"useCollectionField_deprecated",paraId:41,tocIndex:14},{value:"useCollectionField",paraId:41,tocIndex:14},{value:"useCollectionManager",paraId:41,tocIndex:14},{value:"useCollectionManager_deprecated",paraId:41,tocIndex:14},{value:"useCollectionManager",paraId:41,tocIndex:14},{value:"useContext(CollectionManagerContext)",paraId:41,tocIndex:14},{value:"useCollectionManager_deprecated",paraId:41,tocIndex:14},{value:"useCollectionManager",paraId:41,tocIndex:14},{value:"If you are using the above related APIs, you have two ways to change:",paraId:42,tocIndex:14},{value:"Simple replacement: Replace the original API with the one suffixed with ",paraId:43,tocIndex:14},{value:"_deprecated",paraId:43,tocIndex:14},{value:", for example, replace ",paraId:43,tocIndex:14},{value:"useCollection()",paraId:43,tocIndex:14},{value:" with ",paraId:43,tocIndex:14},{value:"useRecord_deprecated()",paraId:43,tocIndex:14},{value:".",paraId:43,tocIndex:14},{value:"Use the new API according to the new documentation: Although the names of the new APIs are the same as the old APIs, there are differences in parameters and return values. You need to refer to the new documentation",paraId:43,tocIndex:14},{value:"to adjust the corresponding code.",paraId:44,tocIndex:14},{value:"registerTemplate()",paraId:45,tocIndex:15},{value:" changed to ",paraId:45,tocIndex:15},{value:"app.dataSourceManager.addCollectionTemplates()",paraId:45,tocIndex:15},{value:"registerField()",paraId:45,tocIndex:15},{value:" changed to ",paraId:45,tocIndex:15},{value:"app.dataSourceManager.addFieldInterfaces()",paraId:45,tocIndex:15},{value:"registerGroup()",paraId:45,tocIndex:15},{value:" changed to ",paraId:45,tocIndex:15},{value:"app.dataSourceManager.addFieldInterfaceGroups()",paraId:45,tocIndex:15},{value:"useContext(CollectionManagerContext)",paraId:45,tocIndex:15},{value:" changed to ",paraId:45,tocIndex:15},{value:"useCollectionManager_deprecated()",paraId:45,tocIndex:15},{value:"Extend collections using ",paraId:45,tocIndex:15},{value:"ExtendCollectionsProvider",paraId:45,tocIndex:15},{value:"RecordProvider",paraId:45,tocIndex:15},{value:" requires explicit passing of the parent parameter when needed",paraId:45,tocIndex:15},{value:"Previously defined as an object, it now needs to be changed to a class. For example:",paraId:46,tocIndex:18},{value:"Before:",paraId:47,tocIndex:18},{value:`import { ICollectionTemplate } from '@nocobase/client';

const calendar: ICollectionTemplate = {
  name: 'calendar',
  title: 'Calendar collection',
  order: 2,
  color: 'orange',
  // ...
}
`,paraId:48,tocIndex:18},{value:"Now:",paraId:49,tocIndex:18},{value:`import { CollectionTemplate } from '@nocobase/client';

class CalendarCollectionTemplate extends CollectionTemplate {
  name = 'calendar';
  title = 'Calendar collection';
  order = 2;
  color = 'orange';
}
`,paraId:50,tocIndex:18},{value:"The original object properties become class members.",paraId:51,tocIndex:18},{value:"Previously registered through ",paraId:52,tocIndex:19},{value:"registerTemplate",paraId:52,tocIndex:19},{value:", now needs to be registered through the plugin's ",paraId:52,tocIndex:19},{value:"dataSourceManager.addCollectionTemplates",paraId:52,tocIndex:19},{value:". For example:",paraId:52,tocIndex:19},{value:"Before:",paraId:53,tocIndex:19},{value:`import { registerTemplate } from '@nocobase/client';
import { calendar } from './calendar'

registerTemplate('calendar', calendar);
`,paraId:54,tocIndex:19},{value:"Now:",paraId:55,tocIndex:19},{value:`import { Plugin } from '@nocobase/client';
import { CalendarCollectionTemplate } from './calendar'

export class CalendarPluginClient extends Plugin {
  async load() {
    this.app.dataSourceManager.addCollectionTemplates([CalendarCollectionTemplate]);
  }
}
`,paraId:56,tocIndex:19},{value:"Previously defined as an object, it now needs to be changed to a class. For example:",paraId:57,tocIndex:21},{value:"Before:",paraId:58,tocIndex:21},{value:`import { IField } from '@nocobase/client';

const attachment: IField = {
  name: 'attachment',
  type: 'object',
  group: 'media',
  title: 'Attachment',
  // ...
}
`,paraId:59,tocIndex:21},{value:"Now:",paraId:60,tocIndex:21},{value:`import { CollectionFieldInterface } from '@nocobase/client';

class AttachmentFieldInterface extends CollectionFieldInterface {
  name = 'attachment';
  type = 'object';
  group = 'media';
  title = 'Attachment';
  // ...
}
`,paraId:61,tocIndex:21},{value:"The original object properties become class members.",paraId:62,tocIndex:21},{value:"Previously registered through ",paraId:63,tocIndex:22},{value:"registerField",paraId:63,tocIndex:22},{value:", now needs to be registered through the plugin's ",paraId:63,tocIndex:22},{value:"dataSourceManager.addFieldInterfaces",paraId:63,tocIndex:22},{value:" and does not require passing ",paraId:63,tocIndex:22},{value:"CollectionManagerProvider",paraId:63,tocIndex:22},{value:" again. For example:",paraId:63,tocIndex:22},{value:"Before:",paraId:64,tocIndex:22},{value:`import { registerField } from '@nocobase/client';
import { attachment } from './attachment'

- registerField(attachment.group, 'attachment', attachment);

export const FileManagerProvider: FC = (props) => {
  return (
-   <CollectionManagerProvider interfaces={{ attachment }}>
      <SchemaComponentOptions scope={hooks} components={{ UploadActionInitializer }}>
        {props.children}
      </SchemaComponentOptions>
-   </CollectionManagerProvider>
  );
};
`,paraId:65,tocIndex:22},{value:"Now:",paraId:66,tocIndex:22},{value:`import { Plugin } from '@nocobase/client';
import { AttachmentFieldInterface } from './attachment'

export class FilPlugin extends Plugin {
  async load() {
    this.app.dataSourceManager.addFieldInterfaces([AttachmentFieldInterface]);
  }
}
`,paraId:67,tocIndex:22},{value:"Previously registered through ",paraId:68,tocIndex:23},{value:"registerGroup",paraId:68,tocIndex:23},{value:", now needs to be registered through the plugin's ",paraId:68,tocIndex:23},{value:"dataSourceManager.addFieldInterfaceGroups",paraId:68,tocIndex:23},{value:". For example:",paraId:68,tocIndex:23},{value:`- import { registerGroup, Plugin } from '@nocobase/client';
+ import { Plugin } from '@nocobase/client';

- registerGroup('map', {
-        label: 'Map-based geometry',
-        order: 10
- })

export class MapPlugin extends Plugin {
  async load() {
+    this.app.dataSourceManager.addFieldInterfaceGroups({
+      map: {
+        label: generateNTemplate('Map-based geometry'),
+        order: 51,
+      },
+    });
  }
}
`,paraId:69,tocIndex:23},{value:"useContext(CollectionManagerContext)",paraId:70},{value:"useCollectionManager_deprecated()",paraId:70},{value:`- const ctx = useContext(CollectionManagerContext);
+ const ctx = useCollectionManager_deprecated();
`,paraId:71,tocIndex:24},{value:"ExtendCollectionsProvider",paraId:70},{value:"CollectionManagerProvider",paraId:70},{value:`const Demo = () => {
-  <CollectionManagerProvider collections={[apiKeysCollection]}>
+  <ExtendCollectionsProvider collections={[apiKeysCollection]}>
...
-  </CollectionManagerProvider>
+  </ExtendCollectionsProvider>
}
`,paraId:72,tocIndex:25},{value:"Previously, when the parent property was not passed, the value of the last RecordProvider was automatically retrieved as the parent. Now, the parent needs to be explicitly passed, and when the parent is not passed, the value of the parent will be undefined.",paraId:73,tocIndex:26},{value:`- <RecordProvider record={recordData}>
+ <RecordProvider record={recordData} parent={parentRecordData}>
...
</RecordProvider>
`,paraId:74,tocIndex:26},{value:"If there is no historical baggage, you can also directly use CollectionRecordProvider to replace.",paraId:75,tocIndex:26},{value:`- <RecordProvider record={recordData}>
+ <CollectionRecordProvider record={recordData} parent={parentRecordData}>
...
- </RecordProvider>
+ </CollectionRecordProvider>
`,paraId:76,tocIndex:26},{value:"RecordProvider is deprecated and will be removed in the future.",paraId:77},{value:"RecordProvider carries the old RecordContext, while CollectionRecordProvider does not.",paraId:77}]}}]);
