"use strict";(self.webpackChunknocobase_docs=self.webpackChunknocobase_docs||[]).push([[59118],{954233:function(o,i,a){a.r(i);var r=a(572269),p=a(793359),_=a(861788),t=a(719977),m=a(20190),s=a(24268),l=a(496057),v=a(585939),j=a(28484),I=a(635206),f=a(375553),g=a(156266),b=a(572333),c=a(841118),E=a(39297),D=a(868526),y=a(605019),d=a(614651),u=a(280936),h=a(667294),n=a(609859),e=a(785893);function x(){return(0,e.jsx)(d.dY,{children:(0,e.jsx)(h.Suspense,{fallback:(0,e.jsx)(u.Z,{}),children:(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("div",{className:"markdown",children:(0,e.jsxs)("h1",{id:"cluster-mode",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#cluster-mode",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Cluster Mode"]})}),(0,e.jsx)(c.Z,{plugins:"pubsub-adapter-redis,lock-adapter-redis,queue-adapter-redis",licenseBundled:"enterprise",licensebundled:"enterprise"}),(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsx)("p",{children:n.texts[0].value}),(0,e.jsxs)("h2",{id:"system-architecture",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#system-architecture",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"System Architecture"]}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/20241231010814.png",alt:"20241231010814"})}),(0,e.jsxs)("h3",{id:"architectural-components",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#architectural-components",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Architectural Components"]}),(0,e.jsx)("p",{children:n.texts[1].value}),(0,e.jsxs)("h4",{id:"application-cluster",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#application-cluster",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Application Cluster"]}),(0,e.jsx)("p",{children:n.texts[2].value}),(0,e.jsxs)("h4",{id:"database",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#database",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Database"]}),(0,e.jsx)("p",{children:n.texts[3].value}),(0,e.jsxs)("h4",{id:"caching-synchronization-messages-message-queue-and-distributed-locks",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#caching-synchronization-messages-message-queue-and-distributed-locks",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Caching, Synchronization Messages, Message Queue and Distributed Locks"]}),(0,e.jsx)("p",{children:n.texts[4].value}),(0,e.jsxs)("h4",{id:"load-balancing",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#load-balancing",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Load Balancing"]}),(0,e.jsx)("p",{children:n.texts[5].value}),(0,e.jsxs)("h2",{id:"deployment-steps",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#deployment-steps",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Deployment Steps"]}),(0,e.jsxs)("h3",{id:"infrastructure-preparation",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#infrastructure-preparation",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Infrastructure Preparation"]}),(0,e.jsxs)("h4",{id:"load-balancer",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#load-balancer",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Load Balancer"]}),(0,e.jsx)("p",{children:n.texts[6].value}),(0,e.jsx)(s.Z,{children:n.texts[7].value}),(0,e.jsx)("p",{children:n.texts[8].value}),(0,e.jsxs)("h4",{id:"redis-service",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#redis-service",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Redis Service"]}),(0,e.jsx)("p",{children:n.texts[9].value}),(0,e.jsxs)("h4",{id:"local-storage-optional",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#local-storage-optional",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Local Storage (Optional)"]}),(0,e.jsx)("p",{children:n.texts[10].value}),(0,e.jsx)("p",{children:n.texts[11].value}),(0,e.jsxs)("h3",{id:"related-plugin-preparation",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#related-plugin-preparation",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Related Plugin Preparation"]}),(0,e.jsxs)(l.Z,{children:[(0,e.jsx)("thead",{children:(0,e.jsxs)("tr",{children:[(0,e.jsx)("th",{children:n.texts[12].value}),(0,e.jsx)("th",{children:n.texts[13].value})]})}),(0,e.jsxs)("tbody",{children:[(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:n.texts[14].value}),(0,e.jsx)("td",{children:n.texts[15].value})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:n.texts[16].value}),(0,e.jsx)("td",{children:n.texts[17].value})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:n.texts[18].value}),(0,e.jsx)("td",{children:n.texts[19].value})]}),(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:n.texts[20].value}),(0,e.jsx)("td",{children:n.texts[21].value})]})]})]})]}),(0,e.jsx)(t.Z,{type:"info",title:"Tip",children:(0,e.jsx)("p",{children:n.texts[22].value})}),(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsxs)("h3",{id:"environment-variable-configuration",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#environment-variable-configuration",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Environment Variable Configuration"]}),(0,e.jsx)("p",{children:n.texts[23].value}),(0,e.jsxs)("h4",{id:"application-key",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#application-key",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Application Key"]}),(0,e.jsx)("p",{children:n.texts[24].value}),(0,e.jsx)(s.Z,{lang:"ini",children:n.texts[25].value}),(0,e.jsxs)("h4",{id:"multi-core-mode",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#multi-core-mode",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Multi-core Mode"]}),(0,e.jsx)(s.Z,{lang:"ini",children:n.texts[26].value}),(0,e.jsxs)("h4",{id:"caching",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#caching",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Caching"]}),(0,e.jsx)(s.Z,{lang:"ini",children:n.texts[27].value}),(0,e.jsxs)("h4",{id:"synchronization-messages",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#synchronization-messages",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Synchronization Messages"]}),(0,e.jsx)(s.Z,{lang:"ini",children:n.texts[28].value}),(0,e.jsxs)("h4",{id:"distributed-lock",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#distributed-lock",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Distributed Lock"]}),(0,e.jsx)(s.Z,{lang:"ini",children:n.texts[29].value}),(0,e.jsxs)("h4",{id:"message-queue",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#message-queue",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Message Queue"]}),(0,e.jsx)(s.Z,{lang:"ini",children:n.texts[30].value})]}),(0,e.jsxs)(t.Z,{type:"info",title:"Tip",children:[(0,e.jsx)("p",{children:n.texts[31].value}),(0,e.jsx)(s.Z,{lang:"ini",children:n.texts[32].value})]}),(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsxs)("h4",{id:"enable-built-in-plugins",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#enable-built-in-plugins",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Enable Built-in Plugins"]}),(0,e.jsx)(s.Z,{lang:"ini",children:n.texts[33].value}),(0,e.jsxs)("h3",{id:"start-the-application",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#start-the-application",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Start the Application"]}),(0,e.jsx)("p",{children:n.texts[34].value}),(0,e.jsxs)("h2",{id:"upgrade-or-maintenance",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#upgrade-or-maintenance",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Upgrade or Maintenance"]}),(0,e.jsx)("p",{children:n.texts[35].value})]}),(0,e.jsxs)(t.Z,{type:"warning",title:"Note",children:[(0,e.jsx)("p",{children:n.texts[36].value}),(0,e.jsx)("p",{children:n.texts[37].value})]}),(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsxs)("h3",{id:"stop-current-services",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#stop-current-services",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Stop Current Services"]}),(0,e.jsx)("p",{children:n.texts[38].value}),(0,e.jsxs)("h3",{id:"backup-data",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#backup-data",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Backup Data"]}),(0,e.jsx)("p",{children:n.texts[39].value}),(0,e.jsxs)("h3",{id:"update-version",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#update-version",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Update Version"]}),(0,e.jsxs)("p",{children:[n.texts[40].value,(0,e.jsx)(d.rU,{to:"../upgrading/docker-compose.md",children:n.texts[41].value}),n.texts[42].value]}),(0,e.jsxs)("h3",{id:"start-services",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#start-services",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Start Services"]}),(0,e.jsxs)("ol",{children:[(0,e.jsx)("li",{children:n.texts[43].value}),(0,e.jsx)("li",{children:n.texts[44].value}),(0,e.jsx)("li",{children:n.texts[45].value}),(0,e.jsx)("li",{children:n.texts[46].value}),(0,e.jsx)("li",{children:n.texts[47].value})]}),(0,e.jsxs)("h2",{id:"more-references",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#more-references",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"More References"]}),(0,e.jsx)("p",{children:n.texts[48].value}),(0,e.jsx)("ul",{children:(0,e.jsx)("li",{children:(0,e.jsx)(d.rU,{to:"/welcome/getting-started/deployment/cluster-mode/services-splitting",children:n.texts[49].value})})})]})]})})})}i.default=x},609859:function(o,i,a){a.r(i),a.d(i,{texts:function(){return r}});const r=[{value:"Starting from version v1.6.0, NocoBase supports running applications in cluster mode. When an application runs in cluster mode, its performance in handling concurrent accesses can be improved through multiple instances and using a multi-core mode.",paraId:0},{value:"The current cluster mode is focused solely on application instances. Other system components in the distributed architecture can be selected by the operations personnel of different teams according to their operational requirements, as long as they comply with the current constraints.",paraId:1,tocIndex:2},{value:"The application cluster is a collection of instances of NocoBase applications, where each instance can be an independent node or multiple application processes running on a single machine in multi-core mode, or a combination of both.",paraId:2,tocIndex:3},{value:"Since the current cluster mode only targets application instances, the database currently only supports a single node. For setups such as master-slave databases, it must be implemented through middleware independently, ensuring transparency to the NocoBase application.",paraId:3,tocIndex:4},{value:"The NocoBase cluster mode relies on middleware such as caching, synchronization messages, message queues, and distributed locks to achieve communication and coordination between clusters. Currently, Redis is preliminarily supported as middleware for these functionalities.",paraId:4,tocIndex:5},{value:"The NocoBase cluster mode requires a load balancer to distribute requests and perform health checks and failover for application instances. This part should be selected and configured according to the operations needs of the team.",paraId:5,tocIndex:6},{value:"Taking a self-built Nginx as an example, add the following content to the configuration file:",paraId:6,tocIndex:9},{value:`upstream myapp {
    # ip_hash; # Can be used for session persistence, once enabled, requests from the same client will always be sent to the same backend server.
    server 172.31.0.1:13000; # Internal node 1
    server 172.31.0.2:13000; # Internal node 2
    server 172.31.0.3:13000; # Internal node 3
}

server {
    listen 80;

    location / {
        # Use the defined upstream for load balancing
        proxy_pass http://myapp;
        # ... other configurations
    }
}
`,paraId:7,tocIndex:9},{value:"This means that requests are reverse proxied and distributed to different server nodes for processing. The configurations for load balancing middleware provided by other cloud service providers can be referenced in the specific configuration documentation provided by them.",paraId:8,tocIndex:9},{value:"Start a Redis service within the cluster's internal network (or k8s). Alternatively, enable separate Redis services based on different functionalities (caching, synchronization messages, and distributed locks).",paraId:9,tocIndex:10},{value:"If local storage is used, in a multi-node mode, it should be mounted as a local storage directory to support shared access across multiple nodes. Otherwise, local storage will not automatically synchronize and cannot be used properly.",paraId:10,tocIndex:11},{value:"If not using local storage, after the application starts, the cloud service-based file storage space must be set as the default file storage space, and the application\u2019s logo (or other files) should be migrated to the cloud storage space.",paraId:11,tocIndex:11},{value:"Function",paraId:12,tocIndex:12},{value:"Plugin",paraId:12,tocIndex:12},{value:"Caching",paraId:12,tocIndex:12},{value:"Built-in",paraId:12,tocIndex:12},{value:"Synchronization Messages",paraId:12,tocIndex:12},{value:"@nocobase/plugin-pubsub-adapter-redis",paraId:12,tocIndex:12},{value:"Message Queue",paraId:12,tocIndex:12},{value:"@nocobase/plugin-queue-adapter-redis",paraId:12,tocIndex:12},{value:"Distributed Lock",paraId:12,tocIndex:12},{value:"@nocobase/plugin-lock-adapter-redis",paraId:12,tocIndex:12},{value:"Just like applications in single-node mode, as long as the respective environment variables for the commercial plugin service platform are configured, the application will automatically download the corresponding plugins after startup.",paraId:13},{value:"In addition to the basic environment variables, the following environment variables must be configured consistently across all nodes.",paraId:14,tocIndex:13},{value:"The key used for creating JWT Tokens during user login; it is recommended to use a random string.",paraId:15,tocIndex:14},{value:`APP_KEY=
`,paraId:16,tocIndex:14},{value:`# Enable PM2 multi-core mode
# CLUSTER_MODE=max # Default is disabled and needs to be manually configured
`,paraId:17,tocIndex:15},{value:`# Cache adapter; must be set to redis in cluster mode (default is memory if not set)
CACHE_DEFAULT_STORE=redis

# Redis cache adapter connection address; must be actively set
CACHE_REDIS_URL=
`,paraId:18,tocIndex:16},{value:`# Redis synchronization adapter connection address; default is redis://localhost:6379/0 if not set
PUBSUB_ADAPTER_REDIS_URL=
`,paraId:19,tocIndex:17},{value:`# Lock adapter; must be set to redis in cluster mode (default is memory local lock if not set)
LOCK_ADAPTER_DEFAULT=redis

# Redis lock adapter connection address; default is redis://localhost:6379/0 if not set
LOCK_ADAPTER_REDIS_URL=
`,paraId:20,tocIndex:18},{value:`# Enable Redis as the message queue adapter, default is in-memory adapter if not set
QUEUE_ADAPTER=redis
# Redis message queue adapter connection address; default is redis://localhost:6379/0 if not set
QUEUE_ADAPTER_REDIS_URL=
`,paraId:21,tocIndex:19},{value:"Generally, the related adapters can all use the same Redis instance, but it\u2019s best to distinguish by using different databases to avoid potential key conflict issues.",paraId:22},{value:`CACHE_REDIS_URL=redis://localhost:6379/0
PUBSUB_ADAPTER_REDIS_URL=redis://localhost:6379/1
LOCK_ADAPTER_REDIS_URL=redis://localhost:6379/2
QUEUE_ADAPTER_REDIS_URL=redis://localhost:6379/3
`,paraId:23},{value:`# Built-in plugins to be enabled
APPEND_PRESET_BUILT_IN_PLUGINS=lock-adapter-redis,pubsub-adapter-redis,queue-adapter-redis
`,paraId:24,tocIndex:20},{value:"When starting the application for the first time, you should first start one of the nodes and wait for the plugins to be installed and enabled before starting the other nodes.",paraId:25,tocIndex:21},{value:"When it is necessary to upgrade the NocoBase version or enable/disable plugins, refer to this process.",paraId:26,tocIndex:22},{value:"In a cluster production environment, caution or prohibition is advised when using features such as plugin management and version upgrades.",paraId:27},{value:"NocoBase has not yet implemented online upgrades for the cluster version. To ensure data consistency, services need to be paused during the upgrade process.",paraId:28},{value:"Stop all NocoBase application instances, middleware such as Redis, and redirect load-balanced traffic to a 503 status page.",paraId:29,tocIndex:23},{value:"Before upgrading, it is strongly recommended to back up database data to prevent issues during the upgrade process.",paraId:30,tocIndex:24},{value:"Refer to ",paraId:31,tocIndex:25},{value:"Docker Upgrade",paraId:32,tocIndex:25},{value:" to update the version of the NocoBase application image.",paraId:31,tocIndex:25},{value:"Restart the dependent middleware (Redis)",paraId:33,tocIndex:26},{value:"Start one node in the cluster and wait for the update to complete and start successfully",paraId:33,tocIndex:26},{value:"Verify functionality; if there are exceptions that cannot be resolved, you may roll back to the previous version",paraId:33,tocIndex:26},{value:"Start the other nodes",paraId:33,tocIndex:26},{value:"Redirect load-balanced traffic to the application cluster",paraId:33,tocIndex:26},{value:"This document only introduces the basic concepts and deployment steps of NocoBase cluster mode. For more configuration items and specific scenarios, please refer to the following documents:",paraId:34,tocIndex:27},{value:"Services splitting",paraId:35,tocIndex:27}]}}]);
