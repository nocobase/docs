"use strict";(self.webpackChunknocobase_docs=self.webpackChunknocobase_docs||[]).push([[10145],{220709:function(d,s,t){t.r(s);var o=t(572269),x=t(793359),h=t(861788),l=t(719977),p=t(20190),n=t(24268),m=t(496057),I=t(585939),v=t(28484),_=t(635206),g=t(375553),j=t(156266),f=t(572333),b=t(841118),A=t(39297),D=t(868526),M=t(605019),i=t(614651),c=t(280936),r=t(667294),a=t(295032),e=t(785893);function u(){return(0,e.jsx)(i.dY,{children:(0,e.jsx)(r.Suspense,{fallback:(0,e.jsx)(c.Z,{}),children:(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsxs)("h1",{id:"adding-a-popup-action",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#adding-a-popup-action",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Adding a Popup Action"]}),(0,e.jsxs)("h2",{id:"scenario-description",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#scenario-description",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Scenario Description"]}),(0,e.jsxs)("p",{children:[a.texts[0].value,(0,e.jsx)("code",{children:a.texts[1].value}),a.texts[2].value]}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/img_v3_02b4_51f4918f-d344-43b2-b19e-48dca709467g.jpg",alt:"img_v3_02b4_51f4918f-d344-43b2-b19e-48dca709467g"})}),(0,e.jsxs)("p",{children:[a.texts[3].value,(0,e.jsx)("code",{children:a.texts[4].value}),a.texts[5].value]}),(0,e.jsxs)("h2",{id:"example-description",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#example-description",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Example Description"]}),(0,e.jsxs)("p",{children:[a.texts[6].value,(0,e.jsx)("code",{children:a.texts[7].value}),a.texts[8].value,(0,e.jsx)("code",{children:a.texts[9].value}),a.texts[10].value,(0,e.jsx)("code",{children:a.texts[11].value}),a.texts[12].value,(0,e.jsx)("code",{children:a.texts[13].value}),a.texts[14].value]}),(0,e.jsxs)("p",{children:[a.texts[15].value,(0,e.jsx)("a",{href:"https://github.com/nocobase/plugin-samples/tree/main/packages/plugins/%40nocobase-sample/plugin-initializer-action-modal",children:a.texts[16].value}),a.texts[17].value]}),(0,e.jsx)("p",{children:(0,e.jsx)("video",{controls:!0,width:"100%",src:"https://static-docs.nocobase.com/20240526172851_rec_.mp4"})}),(0,e.jsxs)("h2",{id:"initializing-the-plugin",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#initializing-the-plugin",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Initializing the Plugin"]}),(0,e.jsxs)("p",{children:[a.texts[18].value,(0,e.jsx)(i.rU,{to:"/development/your-fisrt-plugin",children:a.texts[19].value}),a.texts[20].value]}),(0,e.jsx)(n.Z,{lang:"bash",children:a.texts[21].value}),(0,e.jsx)("p",{children:a.texts[22].value}),(0,e.jsx)(n.Z,{lang:"bash",children:a.texts[23].value}),(0,e.jsx)("p",{children:a.texts[24].value}),(0,e.jsx)(n.Z,{lang:"bash",children:a.texts[25].value}),(0,e.jsxs)("p",{children:[a.texts[26].value,(0,e.jsx)("a",{href:"http://localhost:13000/admin/pm/list/local/",children:a.texts[27].value}),a.texts[28].value]}),(0,e.jsxs)("h2",{id:"functionality-implementation",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#functionality-implementation",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Functionality Implementation"]}),(0,e.jsx)("p",{children:a.texts[29].value}),(0,e.jsxs)("ul",{children:[(0,e.jsx)("li",{children:(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/components/action",children:a.texts[30].value})}),(0,e.jsxs)("li",{children:[(0,e.jsx)(i.rU,{to:"/development/client/ui-schema/initializer",children:a.texts[31].value}),a.texts[32].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/core/ui-schema/schema-initializer",children:a.texts[33].value}),a.texts[34].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)(i.rU,{to:"/development/client/ui-schema/what-is-ui-schema",children:a.texts[35].value}),a.texts[36].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)(i.rU,{to:"/development/client/ui-schema/designable",children:a.texts[37].value}),a.texts[38].value]})]}),(0,e.jsx)(n.Z,{lang:"bash",children:a.texts[39].value}),(0,e.jsxs)("h2",{id:"1-define-the-name",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#1-define-the-name",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"1. Define the Name"]}),(0,e.jsx)("p",{children:a.texts[40].value}),(0,e.jsxs)("p",{children:[a.texts[41].value,(0,e.jsx)("code",{children:a.texts[42].value}),a.texts[43].value]}),(0,e.jsx)(n.Z,{lang:"ts",children:a.texts[44].value}),(0,e.jsxs)("h2",{id:"2-define-the-schema",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#2-define-the-schema",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"2. Define the Schema"]}),(0,e.jsxs)("h3",{id:"21-define-the-schema",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#21-define-the-schema",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"2.1 Define the Schema"]}),(0,e.jsx)("p",{children:a.texts[45].value}),(0,e.jsxs)("ul",{children:[(0,e.jsx)("li",{children:(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/components/action",children:a.texts[46].value})}),(0,e.jsx)("li",{children:(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/components/action#actiondrawer",children:a.texts[47].value})}),(0,e.jsxs)("li",{children:[(0,e.jsx)(i.rU,{to:"/development/client/ui-schema/what-is-ui-schema",children:a.texts[48].value}),a.texts[49].value]})]}),(0,e.jsxs)("p",{children:[a.texts[50].value,(0,e.jsx)("code",{children:a.texts[51].value}),a.texts[52].value]}),(0,e.jsx)(n.Z,{lang:"ts",children:a.texts[53].value}),(0,e.jsxs)("p",{children:[a.texts[54].value,(0,e.jsx)("code",{children:a.texts[55].value}),a.texts[56].value,(0,e.jsx)("code",{children:a.texts[57].value}),a.texts[58].value]}),(0,e.jsxs)("p",{children:[(0,e.jsx)("code",{children:a.texts[59].value}),a.texts[60].value]}),(0,e.jsxs)("ul",{children:[(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[61].value}),a.texts[62].value,(0,e.jsx)("code",{children:a.texts[63].value}),a.texts[64].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[65].value}),a.texts[66].value,(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/components/action",children:a.texts[67].value}),a.texts[68].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[69].value}),a.texts[70].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[71].value}),a.texts[72].value,(0,e.jsx)("ul",{children:(0,e.jsxs)("li",{children:[(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/components/action#actiondrawer",children:a.texts[73].value}),a.texts[74].value]})})]})]}),(0,e.jsxs)("p",{children:[a.texts[75].value,(0,e.jsx)(i.rU,{to:"/development/client/ui-schema/what-is-ui-schema",children:a.texts[76].value}),a.texts[77].value]}),(0,e.jsxs)("h3",{id:"22-validate-the-schema",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#22-validate-the-schema",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"2.2 Validate the Schema"]}),(0,e.jsx)("p",{children:a.texts[78].value}),(0,e.jsxs)("ul",{children:[(0,e.jsx)("li",{children:a.texts[79].value}),(0,e.jsxs)("li",{children:[a.texts[80].value,(0,e.jsx)("code",{children:a.texts[81].value}),a.texts[82].value]})]}),(0,e.jsxs)("p",{children:[a.texts[83].value,(0,e.jsx)("code",{children:a.texts[84].value}),a.texts[85].value]}),(0,e.jsx)(n.Z,{lang:"tsx",children:a.texts[86].value}),(0,e.jsxs)("p",{children:[a.texts[87].value,(0,e.jsx)("a",{href:"http://localhost:13000/admin/open-document-schema",children:a.texts[88].value}),a.texts[89].value]}),(0,e.jsxs)("p",{children:[a.texts[90].value,(0,e.jsx)("code",{children:a.texts[91].value}),a.texts[92].value,(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/core/ui-schema/schema-component#schemacomponent-1",children:a.texts[93].value}),a.texts[94].value]}),(0,e.jsx)("p",{children:(0,e.jsx)("video",{controls:!0,width:"100%",src:"https://static-docs.nocobase.com/20240526171945_rec_.mp4"})}),(0,e.jsx)("p",{children:a.texts[95].value}),(0,e.jsxs)("h1",{id:"3-define-schema-initializer-item",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#3-define-schema-initializer-item",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"3. Define Schema Initializer Item"]}),(0,e.jsxs)("p",{children:[a.texts[96].value,(0,e.jsx)("code",{children:a.texts[97].value}),a.texts[98].value]}),(0,e.jsx)(n.Z,{lang:"ts",children:a.texts[99].value}),(0,e.jsxs)("p",{children:[a.texts[100].value,(0,e.jsx)("code",{children:a.texts[101].value}),a.texts[102].value,(0,e.jsx)("code",{children:a.texts[103].value}),a.texts[104].value,(0,e.jsx)("code",{children:a.texts[105].value}),a.texts[106].value]}),(0,e.jsxs)("ul",{children:[(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[107].value}),a.texts[108].value,(0,e.jsx)("code",{children:a.texts[109].value}),a.texts[110].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[111].value}),a.texts[112].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("code",{children:a.texts[113].value}),a.texts[114].value,(0,e.jsx)("code",{children:a.texts[115].value}),a.texts[116].value,(0,e.jsx)("code",{children:a.texts[117].value}),a.texts[118].value,(0,e.jsx)("code",{children:a.texts[119].value}),a.texts[120].value,(0,e.jsx)("code",{children:a.texts[121].value}),a.texts[122].value]}),(0,e.jsxs)("li",{children:[(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/core/ui-schema/schema-initializer#useschemainitializer",children:a.texts[123].value}),a.texts[124].value,(0,e.jsx)("code",{children:a.texts[125].value}),a.texts[126].value]})]}),(0,e.jsxs)("p",{children:[a.texts[127].value,(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/core/ui-schema/schema-initializer#built-in-components-and-types",children:a.texts[128].value}),a.texts[129].value]}),(0,e.jsxs)("h1",{id:"4-implement-schema-settings",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#4-implement-schema-settings",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"4. Implement Schema Settings"]}),(0,e.jsxs)("h2",{id:"41-define-schema-settings",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#41-define-schema-settings",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"4.1 Define Schema Settings"]}),(0,e.jsxs)("p",{children:[a.texts[130].value,(0,e.jsx)("code",{children:a.texts[131].value}),a.texts[132].value,(0,e.jsx)("a",{href:"https://client.docs.nocobase.com/core/ui-schema/schema-settings",children:a.texts[133].value}),a.texts[134].value]}),(0,e.jsxs)("p",{children:[a.texts[135].value,(0,e.jsx)("code",{children:a.texts[136].value}),a.texts[137].value]}),(0,e.jsx)(n.Z,{lang:"ts",children:a.texts[138].value}),(0,e.jsxs)("h2",{id:"42-register-schema-settings",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#42-register-schema-settings",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"4.2 Register Schema Settings"]}),(0,e.jsx)(n.Z,{lang:"ts",children:a.texts[139].value}),(0,e.jsxs)("h2",{id:"43-use-schema-settings",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#43-use-schema-settings",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"4.3 Use Schema Settings"]}),(0,e.jsxs)("p",{children:[a.texts[140].value,(0,e.jsx)("code",{children:a.texts[141].value}),a.texts[142].value,(0,e.jsx)("code",{children:a.texts[143].value}),a.texts[144].value,(0,e.jsx)("code",{children:a.texts[145].value}),a.texts[146].value,(0,e.jsx)("code",{children:a.texts[147].value}),a.texts[148].value]}),(0,e.jsx)(n.Z,{lang:"diff",children:a.texts[149].value}),(0,e.jsxs)("h1",{id:"5-add-to-configure-actions-in-the-page",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#5-add-to-configure-actions-in-the-page",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"5. Add to Configure Actions in the Page"]}),(0,e.jsxs)("p",{children:[a.texts[150].value,(0,e.jsx)("code",{children:a.texts[151].value}),a.texts[152].value,(0,e.jsx)("strong",{children:a.texts[153].value}),a.texts[154].value,(0,e.jsx)("code",{children:a.texts[155].value}),a.texts[156].value,(0,e.jsx)("code",{children:a.texts[157].value}),a.texts[158].value,(0,e.jsx)("code",{children:a.texts[159].value}),a.texts[160].value,(0,e.jsx)("code",{children:a.texts[161].value}),a.texts[162].value]}),(0,e.jsx)("p",{children:a.texts[163].value}),(0,e.jsx)("p",{children:a.texts[164].value}),(0,e.jsxs)("p",{children:[a.texts[165].value,(0,e.jsx)("code",{children:a.texts[166].value}),a.texts[167].value]}),(0,e.jsx)(n.Z,{lang:"diff",children:a.texts[168].value}),(0,e.jsx)("p",{children:(0,e.jsx)("video",{controls:!0,width:"100%",src:"https://static-docs.nocobase.com/20240526172851_rec_.mp4"})}),(0,e.jsxs)("h1",{id:"6-multi-language-support",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#6-multi-language-support",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"6. Multi-language Support"]})]}),(0,e.jsx)(l.Z,{type:"warning",children:(0,e.jsx)("p",{children:a.texts[169].value})}),(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsxs)("h3",{id:"61-english",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#61-english",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"6.1 English"]}),(0,e.jsxs)("p",{children:[a.texts[170].value,(0,e.jsx)("code",{children:a.texts[171].value}),a.texts[172].value]}),(0,e.jsx)(n.Z,{lang:"json",children:a.texts[173].value}),(0,e.jsxs)("h3",{id:"62-chinese",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#62-chinese",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"6.2 Chinese"]}),(0,e.jsxs)("p",{children:[a.texts[174].value,(0,e.jsx)("code",{children:a.texts[175].value}),a.texts[176].value]}),(0,e.jsx)(n.Z,{lang:"json",children:a.texts[177].value}),(0,e.jsx)("p",{children:a.texts[178].value}),(0,e.jsxs)("p",{children:[a.texts[179].value,(0,e.jsx)("a",{href:"http://localhost:13000/admin/settings/system-settings",children:a.texts[180].value}),a.texts[181].value]}),(0,e.jsx)("p",{children:(0,e.jsx)("img",{src:"https://static-docs.nocobase.com/20240611113758.png",alt:"20240611113758"})}),(0,e.jsxs)("h2",{id:"packaging-and-uploading-to-production",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#packaging-and-uploading-to-production",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Packaging and Uploading to Production"]}),(0,e.jsxs)("p",{children:[a.texts[182].value,(0,e.jsx)(i.rU,{to:"/development/your-fisrt-plugin#build-and-package-plugins",children:a.texts[183].value}),a.texts[184].value]}),(0,e.jsx)("p",{children:a.texts[185].value}),(0,e.jsx)(n.Z,{lang:"bash",children:a.texts[186].value}),(0,e.jsxs)("p",{children:[a.texts[187].value,(0,e.jsx)("code",{children:a.texts[188].value}),a.texts[189].value]}),(0,e.jsx)(n.Z,{lang:"bash",children:a.texts[190].value}),(0,e.jsxs)("p",{children:[a.texts[191].value,(0,e.jsx)("code",{children:a.texts[192].value}),a.texts[193].value,(0,e.jsx)(i.rU,{to:"/welcome/getting-started/plugin",children:a.texts[194].value}),a.texts[195].value]})]})]})})})}s.default=u},295032:function(d,s,t){t.r(s),t.d(s,{texts:function(){return o}});const o=[{value:"In NocoBase, there are many ",paraId:0,tocIndex:1},{value:"Configure actions",paraId:0,tocIndex:1},{value:" used to add operation buttons to the interface.",paraId:0,tocIndex:1},{value:"If the existing action buttons do not fully meet our needs, we can add sub-items to the current ",paraId:1,tocIndex:1},{value:"Configure actions",paraId:1,tocIndex:1},{value:" to create new action buttons.",paraId:1,tocIndex:1},{value:"In this example, we will create a button that, when clicked, opens a popup. The popup contains a document embedded in an iframe. This button will be added to the ",paraId:2,tocIndex:2},{value:"Table",paraId:2,tocIndex:2},{value:", ",paraId:2,tocIndex:2},{value:"Details",paraId:2,tocIndex:2},{value:", and ",paraId:2,tocIndex:2},{value:"Form",paraId:2,tocIndex:2},{value:" blocks within the ",paraId:2,tocIndex:2},{value:"Configure actions",paraId:2,tocIndex:2},{value:".",paraId:2,tocIndex:2},{value:"The complete example code can be found in ",paraId:3,tocIndex:2},{value:"plugin-samples",paraId:3,tocIndex:2},{value:".",paraId:3,tocIndex:2},{value:"Follow the instructions in ",paraId:4,tocIndex:3},{value:"Creating Your First Plugin",paraId:5,tocIndex:3},{value:". If you don\u2019t already have a project, you can create one. If you already have one or have cloned the source code, you can skip this step.",paraId:4,tocIndex:3},{value:`yarn create nocobase-app my-nocobase-app -d postgres
cd my-nocobase-app
yarn install
yarn nocobase install
`,paraId:6,tocIndex:3},{value:"Next, initialize a plugin and add it to the system:",paraId:7,tocIndex:3},{value:`yarn pm create @nocobase-sample/plugin-initializer-action-modal
yarn pm enable @nocobase-sample/plugin-initializer-action-modal
`,paraId:8,tocIndex:3},{value:"Then, start the project:",paraId:9,tocIndex:3},{value:`yarn dev
`,paraId:10,tocIndex:3},{value:"After logging in, visit ",paraId:11,tocIndex:3},{value:"http://localhost:13000/admin/pm/list/local/",paraId:11,tocIndex:3},{value:" to verify that the plugin is installed and enabled.",paraId:11,tocIndex:3},{value:"Before implementing this example, we need to understand some foundational knowledge:",paraId:12,tocIndex:4},{value:"Action Component",paraId:13,tocIndex:4},{value:"SchemaInitializer Tutorial",paraId:14,tocIndex:4},{value:": Used to add blocks, fields, actions, etc., to the interface",paraId:13,tocIndex:4},{value:"SchemaInitializer API",paraId:13,tocIndex:4},{value:": Also for adding blocks, fields, actions, etc., to the interface",paraId:13,tocIndex:4},{value:"UI Schema",paraId:15,tocIndex:4},{value:": Defines the structure and style of the interface",paraId:13,tocIndex:4},{value:"Designable Designer",paraId:16,tocIndex:4},{value:": Used to modify the schema",paraId:13,tocIndex:4},{value:`.
\u251C\u2500\u2500 client # Client-side plugin
\u2502   \u251C\u2500\u2500 initializer # Initializer
\u2502   \u251C\u2500\u2500 index.tsx # Client-side plugin entry point
\u2502   \u251C\u2500\u2500 locale.ts # Localization utility functions
\u2502   \u251C\u2500\u2500 constants.ts # Constants
\u2502   \u251C\u2500\u2500 schema # Schema
\u2502   \u2514\u2500\u2500 settings # Schema Settings
\u251C\u2500\u2500 locale # Localization files
\u2502   \u251C\u2500\u2500 en-US.json # English
\u2502   \u2514\u2500\u2500 zh-CN.json # Chinese
\u251C\u2500\u2500 index.ts # Server-side plugin entry point
\u2514\u2500\u2500 server # Server-side plugin
`,paraId:17,tocIndex:4},{value:"First, we need to define the action name, which will be used in several places.",paraId:18,tocIndex:5},{value:"Create the file ",paraId:19,tocIndex:5},{value:"packages/plugins/@nocobase-sample/plugin-initializer-action-modal/src/client/constants.ts",paraId:19,tocIndex:5},{value:":",paraId:19,tocIndex:5},{value:`export const ActionName = 'Open Document';
export const ActionNameLowercase = 'open-document';
`,paraId:20,tocIndex:5},{value:"NocoBase\u2019s dynamic pages are rendered using schemas, so we need to define a schema for later use to add elements to the interface. Before proceeding, we need to understand the following concepts:",paraId:21,tocIndex:7},{value:"Action Component",paraId:22,tocIndex:7},{value:"Action.Drawer Component",paraId:22,tocIndex:7},{value:"UI Schema Protocol",paraId:23,tocIndex:7},{value:": This document explains the structure of the schema and the purpose of each attribute",paraId:22,tocIndex:7},{value:"We will create a new file, ",paraId:24,tocIndex:7},{value:"packages/plugins/@nocobase-sample/plugin-initializer-action-modal/src/client/schema/index.ts",paraId:24,tocIndex:7},{value:", with the following content:",paraId:24,tocIndex:7},{value:`import { ISchema } from "@nocobase/client"
import { tStr } from "../locale";
import { ActionName } from "../constants";

export const createDocumentActionModalSchema = (blockComponent: string): ISchema => {
  return {
    type: 'void',
    'x-component': 'Action',
    title: tStr(ActionName),
    'x-component-props': {
      type: 'primary'
    },
    properties: {
      drawer: {
        type: 'void',
        'x-component': 'Action.Drawer',
        'x-component-props': {
          size: 'large'
        },
        properties: {
          iframe: {
            type: 'void',
            'x-component': 'iframe',
            'x-component-props': {
              src: \`https://client.docs.nocobase.com/components/\${blockComponent}\`,
              style: {
                border: 'none',
                width: '100%',
                height: '100%'
              }
            },
          }
        }
      },
    },
  }
}
`,paraId:25,tocIndex:7},{value:"The ",paraId:26,tocIndex:7},{value:"createDocumentActionModalSchema",paraId:26,tocIndex:7},{value:" component accepts a ",paraId:26,tocIndex:7},{value:"blockComponent",paraId:26,tocIndex:7},{value:" parameter and returns a schema. This schema adds a button to the interface that, when clicked, opens a popup. The popup contains an iframe with the block's document as its source.",paraId:26,tocIndex:7},{value:"createDocumentActionModalSchema",paraId:27,tocIndex:7},{value:":",paraId:27,tocIndex:7},{value:"type",paraId:28,tocIndex:7},{value:": Specifies the type of component. Here, it\u2019s ",paraId:28,tocIndex:7},{value:"void",paraId:28,tocIndex:7},{value:", meaning it\u2019s a purely UI component",paraId:28,tocIndex:7},{value:"x-component: 'Action'",paraId:28,tocIndex:7},{value:": ",paraId:28,tocIndex:7},{value:"Action Component",paraId:28,tocIndex:7},{value:", used to generate a button",paraId:28,tocIndex:7},{value:"title: 'Open Document'",paraId:28,tocIndex:7},{value:": The title of the button",paraId:28,tocIndex:7},{value:"properties",paraId:28,tocIndex:7},{value:`: Child nodes
`,paraId:28,tocIndex:7},{value:"'x-component': 'Action.Drawer'",paraId:29,tocIndex:7},{value:": Refers to the Action.Drawer component",paraId:29,tocIndex:7},{value:"For more details on the schema, refer to the ",paraId:30,tocIndex:7},{value:"UI Schema",paraId:31,tocIndex:7},{value:" documentation.",paraId:30,tocIndex:7},{value:"There are two methods for validating the schema:",paraId:32,tocIndex:8},{value:"Temporary page validation: You can create a temporary page, render the schema, and check if it meets the requirements",paraId:33,tocIndex:8},{value:"Documentation example validation: Start the documentation by running ",paraId:33,tocIndex:8},{value:"yarn doc plugins/@nocobase-sample/plugin-initializer-action-modal",paraId:33,tocIndex:8},{value:", and validate by creating a documentation example (TODO)",paraId:33,tocIndex:8},{value:"We\u2019ll use the ",paraId:34,tocIndex:8},{value:"Temporary Page Validation",paraId:34,tocIndex:8},{value:" method. Create a new page, add one or more examples based on the attribute parameters, and check if they meet the requirements.",paraId:34,tocIndex:8},{value:`import React from 'react';
import { Plugin, SchemaComponent } from '@nocobase/client';
import { createDocumentActionModalSchema } from './schema';

export class PluginInitializerActionModalClient extends Plugin {
  async load() {
    this.app.router.add('admin.open-document-schema', {
      path: '/admin/open-document-schema',
      Component: () => {
        return <>
          <div style={{ marginTop: 20, marginBottom: 20 }}>
            <SchemaComponent schema={{ properties: { test1: createDocumentActionModalSchema('table-v2') } }} />
          </div>
          <div style={{ marginTop: 20, marginBottom: 20 }}>
            <SchemaComponent schema={{ properties: { test2: createDocumentActionModalSchema('details') } }} />
          </div>
        </>
      }
    })
  }
}

export default PluginInitializerActionModalClient;
`,paraId:35,tocIndex:8},{value:"Afterward, visit ",paraId:36,tocIndex:8},{value:"http://localhost:13000/admin/open-document-schema",paraId:36,tocIndex:8},{value:" to view the temporary page we\u2019ve added.",paraId:36,tocIndex:8},{value:"For detailed information on ",paraId:37,tocIndex:8},{value:"SchemaComponent",paraId:37,tocIndex:8},{value:", refer to the ",paraId:37,tocIndex:8},{value:"SchemaComponent",paraId:37,tocIndex:8},{value:" documentation.",paraId:37,tocIndex:8},{value:"Once validation is complete, be sure to remove the test page.",paraId:38,tocIndex:8},{value:"We will add a new file ",paraId:39,tocIndex:9},{value:"packages/plugins/@nocobase-sample/plugin-initializer-action-modal/src/client/initializer/index.ts",paraId:39,tocIndex:9},{value:":",paraId:39,tocIndex:9},{value:`import { SchemaInitializerItemType, useSchemaInitializer } from "@nocobase/client"

import { useT } from "../locale";
import { createDocumentActionModalSchema } from '../schema';
import { ActionName, ActionNameLowercase } from "../constants";

export const createDocumentActionModalInitializerItem = (blockComponent: string): SchemaInitializerItemType => ({
  type: 'item',
  title: ActionName,
  name: ActionNameLowercase,
  useComponentProps() {
    const { insert } = useSchemaInitializer();
    const t = useT();
    return {
      title: t(ActionName),
      onClick: () => {
        insert(createDocumentActionModalSchema(blockComponent));
      },
    };
  },
})
`,paraId:40,tocIndex:9},{value:"Since we need to generate different ",paraId:41,tocIndex:9},{value:"DocumentActionModal",paraId:41,tocIndex:9},{value:" instances based on various ",paraId:41,tocIndex:9},{value:"blockComponent",paraId:41,tocIndex:9},{value:" values, we define the ",paraId:41,tocIndex:9},{value:"createDocumentActionModalInitializerItem",paraId:41,tocIndex:9},{value:" function to generate the corresponding Schema Initializer Item.",paraId:41,tocIndex:9},{value:"type",paraId:42,tocIndex:9},{value:": This is set as ",paraId:42,tocIndex:9},{value:"item",paraId:42,tocIndex:9},{value:", indicating a text element that triggers an event upon clicking, inserting a new Schema.",paraId:42,tocIndex:9},{value:"name",paraId:42,tocIndex:9},{value:": A unique identifier that helps distinguish between different Schema Items and operations, such as creating, reading, updating, and deleting.",paraId:42,tocIndex:9},{value:"useComponentProps",paraId:42,tocIndex:9},{value:": Returns an object that includes the ",paraId:42,tocIndex:9},{value:"title",paraId:42,tocIndex:9},{value:" and ",paraId:42,tocIndex:9},{value:"onClick",paraId:42,tocIndex:9},{value:" properties. The ",paraId:42,tocIndex:9},{value:"title",paraId:42,tocIndex:9},{value:" is the displayed text, and ",paraId:42,tocIndex:9},{value:"onClick",paraId:42,tocIndex:9},{value:" is the callback function executed when clicked.",paraId:42,tocIndex:9},{value:"useSchemaInitializer",paraId:42,tocIndex:9},{value:": Retrieves the ",paraId:42,tocIndex:9},{value:"SchemaInitializerContext",paraId:42,tocIndex:9},{value:", which provides methods for operational tasks.",paraId:42,tocIndex:9},{value:"For further details on defining Schema Items, refer to the ",paraId:43,tocIndex:9},{value:"Schema Initializer Item",paraId:43,tocIndex:9},{value:" documentation.",paraId:43,tocIndex:9},{value:"At the moment, once added via ",paraId:44,tocIndex:11},{value:"createDocumentActionInitializerItem()",paraId:44,tocIndex:11},{value:", items cannot be removed. We can address this by using ",paraId:44,tocIndex:11},{value:"Schema Settings",paraId:44,tocIndex:11},{value:".",paraId:44,tocIndex:11},{value:"We will add a new file: ",paraId:45,tocIndex:11},{value:"packages/plugins/@nocobase-sample/plugin-initializer-action-modal/src/client/settings/index.ts",paraId:45,tocIndex:11},{value:":",paraId:45,tocIndex:11},{value:`import { SchemaSettings } from "@nocobase/client";
import { ActionNameLowercase } from "../constants";

export const documentActionModalSettings = new SchemaSettings({
  name: \`actionSettings:\${ActionNameLowercase}\`,
  items: [
    {
      name: 'remove',
      type: 'remove',
    }
  ]
});
`,paraId:46,tocIndex:11},{value:`import { Plugin } from '@nocobase/client';
import { documentActionModalSettings } from './settings';

export class PluginInitializerActionModalClient extends Plugin {
  async load() {
    this.app.schemaSettingsManager.add(documentActionModalSettings);
  }
}

export default PluginInitializerActionModalClient;
`,paraId:47,tocIndex:12},{value:"We will modify the ",paraId:48,tocIndex:13},{value:"createDocumentActionModalSchema",paraId:48,tocIndex:13},{value:" function in ",paraId:48,tocIndex:13},{value:"packages/plugins/@nocobase-sample/plugin-initializer-action-modal/src/client/schema/index.ts",paraId:48,tocIndex:13},{value:", adding ",paraId:48,tocIndex:13},{value:"documentActionModalSettings",paraId:48,tocIndex:13},{value:" to ",paraId:48,tocIndex:13},{value:"x-settings",paraId:48,tocIndex:13},{value:".",paraId:48,tocIndex:13},{value:`export const createDocumentActionModalSchema = (blockComponent: string): ISchema => {
  return {
    type: 'void',
    'x-component': 'Action',
+   'x-settings': documentActionModalSettings.name,
    // ..
  }
}
`,paraId:49,tocIndex:13},{value:"There are several ",paraId:50,tocIndex:14},{value:"Configure actions",paraId:50,tocIndex:14},{value:" buttons in the system, but their ",paraId:50,tocIndex:14},{value:"names differ",paraId:50,tocIndex:14},{value:". We will add the necessary items to the ",paraId:50,tocIndex:14},{value:"Table",paraId:50,tocIndex:14},{value:", ",paraId:50,tocIndex:14},{value:"Details",paraId:50,tocIndex:14},{value:", and ",paraId:50,tocIndex:14},{value:"Form",paraId:50,tocIndex:14},{value:" sections' ",paraId:50,tocIndex:14},{value:"Configure actions",paraId:50,tocIndex:14},{value:".",paraId:50,tocIndex:14},{value:"First, we will identify the appropriate names:",paraId:51,tocIndex:14},{value:"TODO",paraId:52,tocIndex:14},{value:"Then, modify the ",paraId:53,tocIndex:14},{value:"packages/plugins/@nocobase-sample/plugin-initializer-action-modal/src/client/index.tsx",paraId:53,tocIndex:14},{value:" file:",paraId:53,tocIndex:14},{value:`import { Plugin } from '@nocobase/client';
import { documentActionModalSettings } from './documentActionModalSettings';
import { createDocumentActionModalInitializerItem } from './documentActionModalInitializerItem';

export class PluginInitializerActionModalClient extends Plugin {
  async load() {
    this.app.schemaSettingsManager.add(documentActionModalSettings);
+   this.app.schemaInitializerManager.addItem('table:configureActions', 'open-document', createDocumentActionModalInitializerItem('table-v2'));
+   this.app.schemaInitializerManager.addItem('details:configureActions', 'open-document', createDocumentActionModalInitializerItem('details'));
+   this.app.schemaInitializerManager.addItem('createForm:configureActions', 'open-document', createDocumentActionModalInitializerItem('form-v2'));
  }
}

export default PluginInitializerActionModalClient;
`,paraId:54,tocIndex:14},{value:"Changes to the language files will take effect only after restarting the service.",paraId:55},{value:"We will edit the file ",paraId:56,tocIndex:16},{value:"packages/plugins/@nocobase-sample/plugin-initializer-action-simple/src/locale/en-US.json",paraId:56,tocIndex:16},{value:":",paraId:56,tocIndex:16},{value:`{
  "Document": "Document"
}
`,paraId:57,tocIndex:16},{value:"We will edit the file ",paraId:58,tocIndex:17},{value:"packages/plugins/@nocobase-sample/plugin-initializer-action-simple/src/locale/zh-CN.json",paraId:58,tocIndex:17},{value:":",paraId:58,tocIndex:17},{value:`{
  "Document": "\u6587\u6863"
}
`,paraId:59,tocIndex:17},{value:"If additional language support is required, more languages can be added.",paraId:60,tocIndex:17},{value:"You can manage multiple languages and switch between them through the UI at ",paraId:61,tocIndex:17},{value:"http://localhost:13000/admin/settings/system-settings",paraId:61,tocIndex:17},{value:".",paraId:61,tocIndex:17},{value:"Following the guidelines outlined in the ",paraId:62,tocIndex:18},{value:"Build and Package Plugins",paraId:63,tocIndex:18},{value:" documentation, we can package the plugin and deploy it to the production environment.",paraId:62,tocIndex:18},{value:"For cloned source code, ensure a full build is executed first to compile plugin dependencies:",paraId:64,tocIndex:18},{value:`yarn build
`,paraId:65,tocIndex:18},{value:"For projects created using ",paraId:66,tocIndex:18},{value:"create-nocobase-app",paraId:66,tocIndex:18},{value:", execute the following:",paraId:66,tocIndex:18},{value:`yarn build @nocobase-sample/plugin-initializer-action-modal --tar
`,paraId:67,tocIndex:18},{value:"This will generate the file ",paraId:68,tocIndex:18},{value:"storage/tar/@nocobase-sample/plugin-initializer-action-modal.tar.gz",paraId:68,tocIndex:18},{value:", which can then be installed by following the ",paraId:68,tocIndex:18},{value:"upload process",paraId:69,tocIndex:18},{value:".",paraId:68,tocIndex:18}]}}]);
