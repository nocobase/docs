"use strict";(self.webpackChunknocobase_docs=self.webpackChunknocobase_docs||[]).push([[43192],{404598:function(o,d,_){_.r(d);var n=_(572269),r=_(793359),m=_(861788),E=_(719977),h=_(20190),t=_(24268),c=_(496057),v=_(585939),O=_(28484),P=_(635206),M=_(375553),x=_(156266),D=_(572333),I=_(841118),C=_(39297),T=_(868526),j=_(605019),a=_(614651),u=_(280936),i=_(667294),s=_(445909),e=_(785893);function l(){return(0,e.jsx)(a.dY,{children:(0,e.jsx)(i.Suspense,{fallback:(0,e.jsx)(u.Z,{}),children:(0,e.jsx)(e.Fragment,{children:(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:s.texts[0].value})}),(0,e.jsx)(t.Z,{lang:"typescript",children:s.texts[1].value}),(0,e.jsx)("p",{children:(0,e.jsx)("strong",{children:s.texts[2].value})}),(0,e.jsxs)("p",{children:[s.texts[3].value,(0,e.jsx)("code",{children:s.texts[4].value}),s.texts[5].value,(0,e.jsx)("code",{children:s.texts[6].value}),s.texts[7].value,(0,e.jsx)("code",{children:s.texts[8].value}),s.texts[9].value,(0,e.jsx)("code",{children:s.texts[10].value}),s.texts[11].value]})]})})})})}d.default=l},445909:function(o,d,_){_.r(d),_.d(d,{texts:function(){return n}});const n=[{value:"Type",paraId:0},{value:`type FindOneOptions = Omit<FindOptions, 'limit'>;
`,paraId:1},{value:"Parameters",paraId:2},{value:"Most parameters are the same as those in ",paraId:3},{value:"find()",paraId:3},{value:". The difference is that ",paraId:3},{value:"findOne()",paraId:3},{value:" returns only a single piece of data, so the ",paraId:3},{value:"limit",paraId:3},{value:" parameter is not needed, and the query is always set to ",paraId:3},{value:"1",paraId:3},{value:".",paraId:3}]}}]);
